{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","components/Logo.js","components/DashboardNavbar.js","components/NavItem.js","components/DashboardSidebar.js","components/DashboardLayout.js","components/MainNavbar.js","components/MainLayout.js","components/account/AccountProfile.js","components/account/AccountProfileDetails.js","pages/Account.js","services/apiLinks.js","components/customer/AddNewForm.js","utils/getInitials.js","utils/validator.js","services/services.js","components/customer/EditForm.js","components/customer/CustomerListResults.js","pages/CustomerList.js","components/dashboard/Budget.js","components/dashboard/LatestOrders.js","components/dashboard/LatestProducts.js","components/dashboard/Sales.js","components/dashboard/TasksProgress.js","components/dashboard/TotalCustomers.js","components/dashboard/TotalProfit.js","components/dashboard/TrafficByDevice.js","pages/Dashboard.js","pages/Login.js","pages/NotFound.js","components/product/ProductListToolbar.js","components/DraggableDialog.jsx","components/product/ViewImage.jsx","components/product/ProductCard.js","components/product/ImagesUpload.jsx","components/product/AddProduct.js","pages/ProductList.js","pages/Register.js","pages/catagories/AddCatForm.jsx","pages/catagories/Catagory.jsx","pages/catagories/Subcatagory.jsx","pages/catagories/Catagories.jsx","components/orders/EditOrder.jsx","components/orders/ViewOrderDetails.jsx","pages/Orders.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","default","paper","colors","common","white","primary","contrastText","main","text","secondary","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","Logo","props","alt","src","DashboardNavbar","onMobileNavOpen","rest","useState","notifications","AppBar","elevation","Toolbar","to","Box","sx","flexGrow","Hidden","lgDown","IconButton","color","Badge","badgeContent","length","variant","lgUp","onClick","NavItem","href","Icon","icon","title","useLocation","active","matchPath","path","end","pathname","ListItem","disableGutters","display","py","Button","component","RouterLink","justifyContent","textTransform","mr","size","user","items","BarChartIcon","UsersIcon","ShoppingBagIcon","SettingsIcon","UserIcon","LockIcon","DashboardSidebar","onMobileClose","openMobile","useEffect","content","flexDirection","alignItems","p","Avatar","cursor","Typography","Divider","List","map","item","Drawer","anchor","onClose","open","PaperProps","defaultProps","DashboardLayoutRoot","experimentalStyled","overflow","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","isMobileNavOpen","setMobileNavOpen","MainNavbar","MainLayoutRoot","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","AccountProfile","Card","CardContent","gutterBottom","moment","format","CardActions","fullWidth","states","value","label","AccountProfileDetails","firstName","lastName","email","phone","state","country","values","setValues","handleChange","event","target","name","autoComplete","noValidate","CardHeader","subheader","Grid","container","spacing","md","xs","TextField","helperText","onChange","required","type","select","SelectProps","native","option","Account","Helmet","minHeight","Container","maxWidth","lg","BASE_URL","LOGIN","SIGNUP","FORGOT_PASSWORD","AddNewForm","refreshData","setAddFormOpen","useNavigate","loading","setLoading","submitAddNew","fullname","password","axios","post","setRefresh","refresh","initialValues","validationSchema","Yup","shape","max","onSubmit","console","log","errors","handleBlur","handleSubmit","touched","isSubmitting","mb","error","onBlur","policy","FormHelperText","CircularProgress","replace","split","slice","v","toUpperCase","join","nameValid","test","axiosWithToken","localStorage","getItem","create","baseURL","apiLinks","axiosWithoutToken","defaults","headers","interceptors","request","use","method","url","Date","getTime","Promise","reject","useGetSetPost","data","setData","apiError","setApiError","getApi","successActions","errActions","gotFuntion","get","response","responseObj","message","toast","putApi","put","postApi","configure","handleInputChange","validate","formErrors","EditForm","editRecord","setEditOpen","editSubmit","city","phoneNumber","token","id","alert","matches","style","paperComponent","PaperComponent","handle","cancel","Paper","CustomerListResults","cust","page","selectedCustomerIds","setCustomers","delOpen","setDelOPen","addFormOpen","editOpen","setId","loading1","setLoading1","setEditRecord","handleClickOpen","handleDelClose","query","delUser","delete","marginLeft","marginTop","marginRight","minWidth","Table","TableHead","TableRow","TableCell","align","TableBody","customer","hover","selected","avatar","getInitials","status","startIcon","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","CustomerList","setPage","pt","Pagination","count","e","newPage","Budget","red","orders","uuid","ref","amount","createdAt","Orders","sortDirection","Tooltip","enterDelay","TableSortLabel","direction","order","Chip","endIcon","products","imageUrl","updatedAt","subtract","LatestProducts","subtitle","product","divider","ListItemAvatar","ListItemText","fromNow","edge","Sales","useTheme","datasets","indigo","grey","labels","animation","layout","legend","maintainAspectRatio","responsive","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","bodyFontColor","enabled","footerFontColor","intersect","mode","titleFontColor","action","position","TasksProgress","orange","LinearProgress","TotalCustomers","green","TotalProfit","TrafficByDevice","hoverBorderColor","cutoutPercentage","devices","LaptopMacIcon","TabletIcon","PhoneIcon","textAlign","Dashboard","sm","xl","LatestOrders","Login","navigate","submit","setItem","pb","disabled","NotFound","formControl","ProductListToolbar","setSubcatId","classes","cats","setCats","subCats","setSubCats","cat","subCat","catsData","setCatsData","mt","FormControl","className","InputLabel","htmlFor","Select","defaultValue","catClick","MenuItem","_id","category_id","subCatClick","DraggableDialog","setOpen","contentText","Component","handleClose","heroContent","heroButtons","cardGrid","paddingBottom","card","cardMedia","cardContent","footer","overflowY","ViewImage","imageData","blue","CardMedia","image","ProductCard","setProductId","setProductName","setDelOpen","setEditFormOpen","setProductData","openImagePopUp","setOpenImagePopUp","setImageData","imageLink","setImageLink","productFiles","handleEditOpen","description","price","variation","key","overflowX","openImage","root","wrapper","buttonSuccess","fabProgress","zIndex","buttonProgress","ImagesUpload","productId","imagePreview","setImagePreview","imageRaw","setImageRaw","React","success","setSuccess","formData","FormData","buttonClassname","clsx","Upload","preventDefault","err","append","img","splice","remove","files","Array","from","file","URL","createObjectURL","multiple","dynamicFormContainer","dynamicFormToolbar","isValid","InitialVariation","AddProduct","edit","productData","units","catagories","setCatagories","subCatagories","setSubCatagories","catRefresh","subCatId","setSubCatId","variationItems","setVariationItems","setErrors","productAdded","setProductAdded","catSuccessActions","subCatSuccessActions","handleVariationInput","index1","updatedArray","submitForm","subCategory","subCatagory","setValidation","displayEmpty","aria-label","selectMainCat","catagory","selectSubCat","multiline","rows","updated","filter","delVariationItem","ProductList","setProducts","editFormOpen","productName","subcatId","rowsPerPage","delProduct","Register","oneOf","ml","Checkbox","checked","Link","underline","AddCatForm","setAddCatOpen","SubmitForm","onChangeFiles","tableRow","Catagory","catagoryName","setCatagoryName","addCatOpen","selectedCategory","setSelectedCategory","hanldeSelectCat","delCatagory","justify","maxHeight","handleDelOpen","Subcatagory","subcatagory","setSubcatagory","subCatName","setsubCatName","header","Catagories","maxwidth","EditOrder","orderID","ViewOrderDetails","Width","orderDetails","address","fullName","zipCode","cart","columnGap","cartId","objectFit","openUpdateOrder","setOpenUpdateOrder","setOrderDetails","viewDetails","setViewDetails","OpenDetails","setOpenDetails","createdOn","paymentStatus","orderData","clickToView","routes","element","children","App","routing","useRoutes","isLogin","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.38938c8a.chunk.js","sourcesContent":["/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    }\n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","/* eslint-disable no-underscore-dangle */\nimport { Chart } from 'react-chartjs-2';\n\n// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw\n});\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      default: '#F4F6F8',\n      paper: colors.common.white\n    },\n    primary: {\n      contrastText: '#ffffff',\n      main: '#5664d2'\n    },\n    text: {\n      primary: '#172b4d',\n      secondary: '#6b778c'\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","const Logo = (props) => (\n  <img\n    alt=\"Logo\"\n    src=\"/static/logo.svg\"\n    {...props}\n  />\n);\n\nexport default Logo;\n","import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport Logo from './Logo';\n\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\n  const [notifications] = useState([]);\n\n  return (\n    <AppBar\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <Logo />\n        </RouterLink>\n        <Box sx={{ flexGrow: 1 }} />\n        <Hidden lgDown>\n          <IconButton color=\"inherit\">\n            <Badge\n              badgeContent={notifications.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <IconButton color=\"inherit\">\n            <InputIcon />\n          </IconButton>\n        </Hidden>\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onMobileNavOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nDashboardNavbar.propTypes = {\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default DashboardNavbar;\n","import {\n  NavLink as RouterLink,\n  matchPath,\n  useLocation\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button, ListItem } from '@material-ui/core';\n\nconst NavItem = ({\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const location = useLocation();\n\n  const active = href ? !!matchPath({\n    path: href,\n    end: false\n  }, location.pathname) : false;\n\n  return (\n    <ListItem\n      disableGutters\n      sx={{\n        display: 'flex',\n        py: 0\n      }}\n      {...rest}\n    >\n      <Button\n        component={RouterLink}\n        sx={{\n          color: 'text.secondary',\n          fontWeight: 'medium',\n          justifyContent: 'flex-start',\n          letterSpacing: 0,\n          py: 1.25,\n          textTransform: 'none',\n          width: '100%',\n          ...(active && {\n            color: 'primary.main'\n          }),\n          '& svg': {\n            mr: 1\n          }\n        }}\n        to={href}\n      >\n        {Icon && (\n          <Icon size=\"20\" />\n        )}\n        <span>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography\n} from '@material-ui/core';\nimport {\n  AlertCircle as AlertCircleIcon,\n  BarChart as BarChartIcon,\n  Lock as LockIcon,\n  Settings as SettingsIcon,\n  ShoppingBag as ShoppingBagIcon,\n  User as UserIcon,\n  UserPlus as UserPlusIcon,\n  Users as UsersIcon\n} from 'react-feather';\nimport NavItem from './NavItem';\n\nconst user = {\n  avatar: '/static/images/avatars/avatar_6.png',\n  jobTitle: 'Senior Developer',\n  name: 'Katarina Smith'\n};\n\nconst items = [\n  {\n    href: '/app/dashboard',\n    icon: BarChartIcon,\n    title: 'Dashboard'\n  },\n  {\n    href: '/app/customers',\n    icon: UsersIcon,\n    title: 'Customers'\n  },\n  {\n    href: '/app/products',\n    icon: ShoppingBagIcon,\n    title: 'Products'\n  },\n  {\n    href: '/app/catagories',\n    icon: SettingsIcon,\n    title: 'Catagories'\n  },\n  {\n    href: '/app/orders',\n    icon: ShoppingBagIcon,\n    title: 'Orders'\n  },\n \n  {\n    href: '/app/account',\n    icon: UserIcon,\n    title: 'Account'\n  },\n  {\n    href: '/login',\n    icon: LockIcon,\n    title: 'Logout'\n  },\n  // {\n  //   href: '/register',\n  //   icon: UserPlusIcon,\n  //   title: 'Register'\n  // },\n  // {\n  //   href: '/404',\n  //   icon: AlertCircleIcon,\n  //   title: 'Error'\n  // }\n];\n\nconst DashboardSidebar = ({ onMobileClose, openMobile }) => {\n  const location = useLocation();\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n  }, [location.pathname]);\n\n  const content = (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      }}\n    >\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexDirection: 'column',\n          p: 2\n        }}\n      >\n        <Avatar\n          component={RouterLink}\n          src={user.avatar}\n          sx={{\n            cursor: 'pointer',\n            width: 64,\n            height: 64\n          }}\n          to=\"/app/account\"\n        />\n        <Typography\n          color=\"textPrimary\"\n          variant=\"h5\"\n        >\n          {user.name}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {user.jobTitle}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box sx={{ p: 2 }}>\n        <List>\n          {items.map((item) => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n            />\n          ))}\n        </List>\n      </Box>\n      <Box sx={{ flexGrow: 1 }} />\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n          PaperProps={{\n            sx: {\n              width: 256\n            }\n          }}\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden lgDown>\n        <Drawer\n          anchor=\"left\"\n          open\n          variant=\"persistent\"\n          PaperProps={{\n            sx: {\n              width: 256,\n              top: 64,\n              height: 'calc(100% - 64px)'\n            }\n          }}\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nDashboardSidebar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nDashboardSidebar.defaultProps = {\n  onMobileClose: () => { },\n  openMobile: false\n};\n\nexport default DashboardSidebar;\n","import { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { experimentalStyled } from '@material-ui/core';\nimport DashboardNavbar from './DashboardNavbar';\nimport DashboardSidebar from './DashboardSidebar';\n\nconst DashboardLayoutRoot = experimentalStyled('div')(\n  ({ theme }) => ({\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  })\n);\n\nconst DashboardLayoutWrapper = experimentalStyled('div')(\n  ({ theme }) => ({\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  })\n);\n\nconst DashboardLayoutContainer = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden'\n});\n\nconst DashboardLayoutContent = experimentalStyled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto'\n});\n\nconst DashboardLayout = () => {\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  return (\n    <DashboardLayoutRoot>\n      <DashboardNavbar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <DashboardSidebar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n      />\n      <DashboardLayoutWrapper>\n        <DashboardLayoutContainer>\n          <DashboardLayoutContent>\n            <Outlet />\n          </DashboardLayoutContent>\n        </DashboardLayoutContainer>\n      </DashboardLayoutWrapper>\n    </DashboardLayoutRoot>\n  );\n};\n\nexport default DashboardLayout;\n","import { Link as RouterLink } from 'react-router-dom';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport Logo from './Logo';\n\nconst MainNavbar = (props) => (\n  <AppBar\n    elevation={0}\n    {...props}\n  >\n    <Toolbar sx={{ height: 64 }}>\n      <RouterLink to=\"/\">\n        <Logo />\n      </RouterLink>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default MainNavbar;\n","import { Outlet } from 'react-router-dom';\nimport { experimentalStyled } from '@material-ui/core';\nimport MainNavbar from './MainNavbar';\n\nconst MainLayoutRoot = experimentalStyled('div')(\n  ({ theme }) => ({\n    backgroundColor: theme.palette.background.paper,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  })\n);\n\nconst MainLayoutWrapper = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n  paddingTop: 64\n});\n\nconst MainLayoutContainer = experimentalStyled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden'\n});\n\nconst MainLayoutContent = experimentalStyled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto'\n});\n\nconst MainLayout = () => (\n  <MainLayoutRoot>\n    <MainNavbar />\n    <MainLayoutWrapper>\n      <MainLayoutContainer>\n        <MainLayoutContent>\n          <Outlet />\n        </MainLayoutContent>\n      </MainLayoutContainer>\n    </MainLayoutWrapper>\n  </MainLayoutRoot>\n);\n\nexport default MainLayout;\n","import moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography\n} from '@material-ui/core';\n\nconst user = {\n  avatar: '/static/images/avatars/avatar_6.png',\n  city: 'Los Angeles',\n  country: 'USA',\n  jobTitle: 'Senior Developer',\n  name: 'Katarina Smith',\n  timezone: 'GTM-7'\n};\n\nconst AccountProfile = (props) => (\n  <Card {...props}>\n    <CardContent>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexDirection: 'column'\n        }}\n      >\n        <Avatar\n          src={user.avatar}\n          sx={{\n            height: 100,\n            width: 100\n          }}\n        />\n        <Typography\n          color=\"textPrimary\"\n          gutterBottom\n          variant=\"h3\"\n        >\n          {user.name}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body1\"\n        >\n          {`${user.city} ${user.country}`}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body1\"\n        >\n          {`${moment().format('hh:mm A')} ${user.timezone}`}\n        </Typography>\n      </Box>\n    </CardContent>\n    <Divider />\n    <CardActions>\n      <Button\n        color=\"primary\"\n        fullWidth\n        variant=\"text\"\n      >\n        Upload picture\n      </Button>\n    </CardActions>\n  </Card>\n);\n\nexport default AccountProfile;\n","import { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField\n} from '@material-ui/core';\n\nconst states = [\n  {\n    value: 'alabama',\n    label: 'Alabama'\n  },\n  {\n    value: 'new-york',\n    label: 'New York'\n  },\n  {\n    value: 'san-francisco',\n    label: 'San Francisco'\n  }\n];\n\nconst AccountProfileDetails = (props) => {\n  const [values, setValues] = useState({\n    firstName: 'Katarina',\n    lastName: 'Smith',\n    email: 'demo@devias.io',\n    phone: '',\n    state: 'Alabama',\n    country: 'USA'\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n      {...props}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"The information can be edited\"\n          title=\"Profile\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                helperText=\"Please specify the first name\"\n                label=\"First name\"\n                name=\"firstName\"\n                onChange={handleChange}\n                required\n                value={values.firstName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Last name\"\n                name=\"lastName\"\n                onChange={handleChange}\n                required\n                value={values.lastName}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={handleChange}\n                required\n                value={values.email}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Phone Number\"\n                name=\"phone\"\n                onChange={handleChange}\n                type=\"number\"\n                value={values.phone}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Country\"\n                name=\"country\"\n                onChange={handleChange}\n                required\n                value={values.country}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Select State\"\n                name=\"state\"\n                onChange={handleChange}\n                required\n                select\n                SelectProps={{ native: true }}\n                value={values.state}\n                variant=\"outlined\"\n              >\n                {states.map((option) => (\n                  <option\n                    key={option.value}\n                    value={option.value}\n                  >\n                    {option.label}\n                  </option>\n                ))}\n              </TextField>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save details\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nexport default AccountProfileDetails;\n","import { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Grid\n} from '@material-ui/core';\nimport AccountProfile from 'src/components/account/AccountProfile';\nimport AccountProfileDetails from 'src/components/account/AccountProfileDetails';\n\nconst Account = () => (\n  <>\n    <Helmet>\n      <title>Account | TradeMax</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xs={12}\n          >\n            <AccountProfile />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n            <AccountProfileDetails />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default Account;\n","export const BASE_URL = \"http://13.54.226.124:4604/api\"\nexport const GET_USERS = \"/users/getUsers\"\nexport const LOGIN = '/users/login'\nexport const ADMIN_LOGIN = '/users/adminlogin'\nexport const SIGNUP = '/users/signup' \nexport const FORGOT_PASSWORD = '/users/forgot'\nexport const REGISTER = '/users/register'\nexport const DELETE = '/users/delete'\n","import { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport axios from 'axios'\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { useState } from 'react';\n\nconst AddNewForm = ({refreshData,setAddFormOpen}) => {\n  const navigate = useNavigate();\n   \n  const [loading, setLoading] = useState(false)\n\n  const submitAddNew = async(values)=>{\n    setLoading(true)\n    const body = {\n      email:values.email,\n    fullname:values.fullname,\n     password:values.password\n  }\n   \n \n   const res = await axios.post(\"http://13.54.226.124:4604/api/users/register\",body)\n   setLoading(false)\n   refreshData.setRefresh(!refreshData.refresh)\n   setAddFormOpen(false)\n\n  }\n\n  return (\n    <>\n \n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center'\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              fullname: '',\n             \n              password: '',\n            \n            }}\n            validationSchema={\n              Yup.object().shape({\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                fullname: Yup.string().max(255).required('First name is required'),\n              \n                password: Yup.string().max(255).required('password is required'),\n              })\n            }\n\n            onSubmit={(values) => {\n              // navigate('/app/dashboard', { replace: true });\n              console.log(values)\n              submitAddNew(values)\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box sx={{ mb: 3 }}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Create new account\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Use your email to create new account\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  fullWidth\n                  helperText={touched.firstName && errors.firstName}\n                  label=\"Full Name\"\n                  margin=\"normal\"\n                  name=\"fullname\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.fullname}\n                  variant=\"outlined\"\n                />\n                \n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n               \n                {Boolean(touched.policy && errors.policy) && (\n                  <FormHelperText error>\n                    {errors.policy}\n                  </FormHelperText>\n                )}\n                <Box sx={{ py: 2 }}>\n                  <Button\n                    color=\"primary\"\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                   {loading?<CircularProgress/>:\"Add User\"}\n                  </Button>\n                </Box>\n               \n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default AddNewForm;\n","export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","export const isFieldEmpty = text => {\n    if (text == '') {\n        return true;\n    }\n    return false;\n};\nexport const passwordPattern = password => {\n    if(password.length<8){\n        return true\n    }\n    return false;\n};\n\nexport const isValidEmail = email => {\n    var reg = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    if (reg.test(email) != true) {\n        return true;\n    }\n    return false;\n};\n\nexport const isValidPhoneNumber = phoneNo => {\n    if (phoneNo.length < 8) {\n        return false;\n    }\n    return true;\n};\n\nexport const isValidComparedPassword = (newpassword, confirmPassword) => {\n    if (newpassword != confirmPassword) {\n        return false;\n    }\n    return true;\n};\n\n\nexport const nameValid = name => {\n    const reg = /[a-zA-Z][a-zA-Z ]+[a-zA-Z]$/;\n    if (reg.test(name) === true) {\n        return false;\n    }\n    return true;\n};\n\n\nexport const pinValid = pin => {\n    const reg = /^[1-9][0-9]{5}$/;\n    if (reg.test(pin) === true) {\n        return false\n    }\n    return true;\n}\n\nexport const validUserName = (userName)=>{\n    const reg = /^[a-zA-Z0-9][a-zA-Z0-9_]*[a-zA-Z0-9](?<![-?\\d+\\.?\\d*$]{6,}.*)$/;\n    if (reg.test(userName) === true) {\n        return false\n    }\n    return true;\n}\n","import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport * as validate from '../utils/validator'\nimport * as apiLinks from './apiLinks'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nconst token = localStorage.getItem(\"token\");\n\n// AXIOS INSTANCE WITH TOKEN\nconst axiosWithToken = axios.create({\n  // Other custom settings\n  baseURL: apiLinks.BASE_URL,\n});\n// AXIOS INSTANCE WITHOUT TOKEN\nconst axiosWithoutToken = axios.create({\n  // Other custom settings\n  baseURL: apiLinks.BASE_URL,\n});\n// axiosInstance.get('/comments').then(res => console.log(res));\n\naxiosWithToken.defaults.headers.common[\n  \"Authorization\"\n] = `Bearer ${localStorage.getItem(\"jwt\")}`\n\n// INTERCEPTING REQUESTS & RESPONSES\naxiosWithoutToken.interceptors.request.use(\n  (config) => {\n    console.log(\n      `${config.method.toUpperCase()} request sent to ${config.url\n      } at ${new Date().getTime()} without token`\n    );\n\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\naxiosWithToken.interceptors.request.use(\n  (config) => {\n    console.log(\n      `${config.method.toUpperCase()} request sent to ${config.url\n      } at ${new Date().getTime()}`\n    );\n\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n//Simultaneously Data Fetching\nfunction getData() {\n  axios\n    .all([\n      axios.get(\"url1\"),\n      axios.get(\"url2\"),\n    ])\n    .then(axios.spread((todos, posts) => console.log(posts)))\n    .catch((err) => console.error(err));\n}\n\n\nconst EMAIL_ERROR = \"Please enter a valid E-Mail\"\nconst USERNAME_ERROR = \"Please enter a valid username\"\nconst PASSWORD_ERROR = \"Please enter a strong password\"\n\n\nexport const useGetSetPost = () => {\n  useEffect(() => {\n    axiosWithToken.defaults.headers.common[\n      \"Authorization\"\n    ] = `Bearer ${localStorage.getItem(\"jwt\")}`;\n  }, []);\n\n  const [loading, setLoading] = useState(false);\n\n  const [data, setData] = useState()\n\n  const [apiError, setApiError] = useState(false)\n\n\n  //input handling\n\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case \"email\": {\n        if (!!validate.nameValid(value)) {\n          setData({ ...data, [name]: value, formErrors: { ...data.formErrors, [name]: EMAIL_ERROR } })\n        } else {\n          setData({ ...data, [name]: value, formErrors: { ...data.formErrors, [name]: true } })\n        }\n        break;\n      }\n      case \"username\": {\n        if (!!validate.nameValid(value)) {\n          setData({ ...data, [name]: value, formErrors: { [name]: USERNAME_ERROR } })\n        } else {\n          setData({ ...data, [name]: value, formErrors: { [name]: true } })\n        }\n        break;\n      }\n\n      case \"password\": {\n        if (!!validate.passwordPattern(value)) {\n          setData({ ...data, [name]: value, formErrors: { [name]: PASSWORD_ERROR } })\n        } else {\n          setData({ ...data, [name]: value, formErrors: { [name]: true } })\n        }\n        break;\n      }\n\n      default: {\n      }\n    }\n  };\n\n\n  //function\n\n\n  const getApi = async (pathname, successActions, errActions) => {\n    setLoading(true)\n    let response;\n\n    let gotFuntion = Boolean(successActions && typeof (successActions) === \"function\")\n\n\n    try {\n      if (\n        pathname === apiLinks.LOGIN ||\n        pathname === apiLinks.FORGOT_PASSWORD ||\n        pathname === apiLinks.SIGNUP ||\n        pathname === apiLinks.GET_USERS\n\n      ) {\n        response = await axiosWithoutToken.get(pathname);\n\n      } else {\n        response = await axiosWithToken.get(pathname);\n      }\n\n      const responseObj = response.data;\n\n\n      if (responseObj.data) {\n\n        gotFuntion && successActions(responseObj.data)\n\n        setData(responseObj.data)\n      }\n      else if (responseObj.items) {\n        gotFuntion && successActions(responseObj.items)\n        setData(responseObj.items)\n      }\n      else {\n        gotFuntion && successActions(responseObj.message)\n        setData(responseObj.message)\n      }\n\n\n\n      setLoading(false)\n    } catch (error) {\n      if (error.response) {\n        if (errActions && typeof (errActions) === \"function\") {\n          errActions(error.response.data.message)\n        }\n        else {\n          toast.error(error.response.data.message);\n          // alert(error.response.data.message)\n        }\n        setApiError(error.response.data.message)\n\n      } else {\n        if (errActions && typeof (errActions) === \"function\") {\n          errActions(\"Request not reached at server\")\n        }\n        else {\n          toast.error(\"Request not reached at server\");\n\n          // alert(\"Request not reached at server\")\n        }\n        setApiError(\"Request not reached at server\")\n      }\n      setLoading(false)\n    }\n  };\n\n\n  // put function \n\n  const putApi = async (pathname, body, successActions, errActions) => {\n    setLoading(true)\n    let response;\n    try {\n      if (\n        pathname === apiLinks.LOGIN ||\n        pathname === apiLinks.FORGOT_PASSWORD ||\n        pathname === apiLinks.SIGNUP\n      ) {\n        response = await axiosWithoutToken.put(pathname, body);\n\n      } else {\n        response = await axiosWithToken.put(pathname, body);\n      }\n\n      const responseObj = response.data;\n\n      if (successActions && typeof (successActions) === \"function\") {\n        if (responseObj.data) {\n          successActions(responseObj.data)\n          setData(responseObj.data)\n        }\n        else if (responseObj.items) {\n          successActions(responseObj.items)\n          setData(responseObj.items)\n        }\n        else {\n          successActions(responseObj.message)\n          setData(responseObj.message)\n        }\n      }\n      setLoading(false)\n    } catch (error) {\n      if (error.response) {\n        if (errActions && typeof (errActions) === \"function\") {\n          errActions(error.response.data.message)\n        }\n        else {\n          toast.error(error.response.data.message);\n          // alert(error.response.data.message)\n        }\n        setApiError(error.response.data.message)\n\n      } else {\n        if (errActions && typeof (errActions) === \"function\") {\n          errActions(\"Request not reached at server\")\n        }\n        else {\n          toast.error(\"Request not reached at server\");\n          // alert(\"Request not reached at server\")\n        }\n        setApiError(\"Request not reached at server\")\n      }\n      setLoading(false)\n    }\n  };\n\n\n\n  //post function\n\n\n  const postApi = async (pathname, body, successActions, errActions) => {\n    setLoading(true)\n    toast.configure();\n    let response;\n    try {\n      if (\n        pathname === apiLinks.LOGIN ||\n        pathname === apiLinks.FORGOT_PASSWORD ||\n        pathname === apiLinks.SIGNUP\n      ) {\n        response = await axiosWithoutToken.post(pathname, body);\n\n      } else {\n        response = await axiosWithToken.post(pathname, body);\n      }\n\n      const responseObj = response.data;\n\n      if (successActions && typeof (successActions) === \"function\") {\n        if (responseObj.data) {\n          successActions(responseObj.data)\n          setData(responseObj.data)\n        }\n        else if (responseObj.items) {\n          successActions(responseObj.items)\n          setData(responseObj.items)\n        }\n        else {\n          successActions(responseObj.message)\n          setData(responseObj.message)\n        }\n      }\n      setLoading(false)\n    } catch (error) {\n      if (error.response) {\n        if (errActions && typeof (errActions) === \"function\") {\n          errActions(error.response.data.message)\n        }\n        else {\n          // toast(\"Wow so easy!\");\n          toast.error(error.response.data.message);\n          // alert(error.response.data.message)\n        }\n        setApiError(error.response.data.message)\n\n      } else {\n        if (errActions && typeof (errActions) === \"function\") {\n          errActions(\"Request not reached at server\")\n        }\n        else {\n          // alert(\"Request not reached at server\")\n          toast.error(\"Request not reached at server\");\n        }\n        setApiError(\"Request not reached at server\")\n      }\n      setLoading(false)\n    }\n  };\n\n  return { loading, data, apiError, getApi, putApi, postApi, handleInputChange };\n}\n\n\n\n","import { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport axios from 'axios'\nimport { Formik } from 'formik';\nimport CircularProgress from '@material-ui/core/CircularProgress'; \nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { useState } from 'react';\n\nconst EditForm = ({editRecord,refreshData,setEditOpen}) => {\n  const navigate = useNavigate();\n\n  const [loading, setLoading] = useState(false)\n\n\n  const editSubmit = async(values) => {\n     setLoading(true)\n    const body = {\n     fullname: values.fullname,\n     city:values.city,\n     phoneNumber:values.phoneNumber\n\n    }\n    \n    const config = {\n      headers:{\n        'x-access-token':localStorage.token\n      }\n    }\n\n    try{\n\n    const res = await  axios.put(`http://13.54.226.124:4604/api/users/update/${editRecord.id}`,body,config)\n    setLoading(false)\n    refreshData.setRefresh(!refreshData.refresh)\n    setEditOpen(false)\n  }\n  catch(err){\n   if(err.response){\n     return alert(err.response.data.message)\n   }\n   alert(err)\n   setLoading(false)\n   setEditOpen(false)\n  }\n\n}\n\n  return (\n    <>\n      <Helmet>\n        <title>Register | TradeMax</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center'\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              phoneNumber: editRecord.phoneNumber||'',\n              fullname: editRecord.fullname||'',\n              city: editRecord.city||''\n              \n            }}\n\n            validationSchema={\n              Yup.object().shape({\n                \n                fullname: Yup.string().max(255).required('First name is required'),\n              \n                city: Yup.string().max(255).required('City is required'),\n\n                phoneNumber: Yup.string()\n                .required(\"Phone number is required\")\n                .matches(\n                /^[789]\\d{9}$/g,\n                  \"Invalid phone number\" \n                )\n              })\n            }\n           \n            onSubmit={(values) => {\n              // navigate('/app/dashboard', { replace: true });\n             editSubmit(values)\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box sx={{ mb: 3 }}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Edit User Details\n                  </Typography>\n                  \n                </Box>\n                <TextField\n                  error={Boolean(touched.fullname && errors.fullname)}\n                  fullWidth\n                  helperText={touched.fullname && errors.fullname}\n                  label=\"Fullname\"\n                  margin=\"normal\"\n                  name=\"fullname\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.fullname}\n                  variant=\"outlined\"\n                />\n                \n                <TextField\n                  error={Boolean(touched.phoneNumber && errors.phoneNumber)}\n                  fullWidth\n                  helperText={touched.phoneNumber && errors.phoneNumber}\n                  label=\"Phone\"\n                  margin=\"normal\"\n                  name=\"phoneNumber\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"number\"\n                  value={values.phoneNumber}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.city && errors.city)}\n                  fullWidth\n                  helperText={touched.city && errors.city}\n                  label=\"City\"\n                  margin=\"normal\"\n                  name=\"city\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"text\"\n                  value={values.city}\n                  variant=\"outlined\"\n                />\n                \n              \n                <Box sx={{ py: 2 }}>\n                  <Button\n                    color=\"primary\"\n                    \n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                   {loading ? <CircularProgress style={{color:\"white\"}}/>:\"Update\"}\n                  </Button>\n                </Box>\n                \n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default EditForm;\n","import { useState, useEffect } from 'react';\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport EditIcon from '@material-ui/icons/Edit';\nimport moment from 'moment';\nimport { Button } from '@material-ui/core';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport * as apiLinks from '../../services/apiLinks';\nimport Draggable from 'react-draggable';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/styles';\nimport AddNewForm from './AddNewForm';\nimport getInitials from 'src/utils/getInitials';\nimport { useGetSetPost } from 'src/services/services';\nimport EditForm from './EditForm';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  paperComponent: {\n    width: 'auto',\n    height: 'auto'\n  }\n}));\n\nfunction PaperComponent(props) {\n  const classes = useStyles();\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nconst CustomerListResults = ({ cust, page, ...rest }) => {\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const { loading, getApi, postApi, apiError, data } = useGetSetPost();\n  const [customers, setCustomers] = useState([]);\n  const [delOpen, setDelOPen] = useState(false);\n  const [addFormOpen, setAddFormOpen] = useState(false);\n  const [editOpen, setEditOpen] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [id, setId] = useState('');\n  const [loading1, setLoading1] = useState(false);\n  const [editRecord, setEditRecord] = useState({});\n\n  const handleClickOpen = (id) => {\n    setId(id);\n    setDelOPen(true);\n  };\n\n  const handleDelClose = () => {\n    setDelOPen(false);\n  };\n\n  const handleEditButton = (record) => {\n    setEditRecord(record);\n    setEditOpen(true);\n  };\n\n  useEffect(() => {\n    const successActions = (data) => {\n      setCustomers(data);\n    };\n\n    const query =  `/users/getUsers?pageNo=${page}&pageSize=15`\n\n    getApi(query, successActions);\n  }, [refresh,page]);\n\n  const handleSelectAll = (event) => {\n    let newSelectedCustomerIds;\n\n    if (event.target.checked) {\n      newSelectedCustomerIds = customers.map((customer) => customer.id);\n    } else {\n      newSelectedCustomerIds = [];\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds,\n        id\n      );\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds.slice(1)\n      );\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds.slice(0, -1)\n      );\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds.slice(0, selectedIndex),\n        selectedCustomerIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n\n  const delUser = async () => {\n    setLoading1(true);\n    const query = `http://13.54.226.124:4604/api${apiLinks.DELETE}/${id}`;\n    const config = {\n      headers: {\n        'x-access-token': localStorage.token\n      }\n    };\n\n    try {\n      const res = await axios.delete(query, config);\n      setRefresh(!refresh);\n      setLoading1(false);\n      setDelOPen(false);\n    } catch (err) {\n      if (err.response) {\n        setLoading1(false);\n        setDelOPen(false);\n        return alert(err.response.data.error);\n      }\n      alert(err);\n    }\n  };\n\n  return (\n    <>\n      <Card {...rest}>\n        <Box>\n           <div style={{display:\"flex\", justifyContent:\"space-between\",flexDirection:\"row\",alignItems:\"center\"}}>\n             <Typography style={{marginLeft:\"300px\",marginTop:\"30px\"}} variant=\"h2\" color=\"primary\">Customers </Typography>\n            <Button\n              style={{ marginRight: '70px',marginTop:\"30px\" }}\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => setAddFormOpen(true)}\n            >\n              Add User\n            </Button>\n            </div>\n        </Box>\n        <PerfectScrollbar>\n          <Box sx={{ minWidth: 1050 }}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Email</TableCell>\n                  <TableCell>Status</TableCell>\n                  <TableCell align=\"center\">Action</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {\n                  loading && <div style={{display:\"flex\", marginLeft:\"500px\", maxWidth:\"600px\", alignItems:\"center\",minHeight:\"450px\"}}>\n                 <CircularProgress/>\n                  </div>\n                }\n                {(!loading && data) && data.map((customer) => (\n                  <TableRow\n                    hover\n                    key={customer.id}\n                    selected={selectedCustomerIds.indexOf(customer.id) !== -1}\n                  >\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        <Avatar src={customer.avatar} sx={{ mr: 2 }}>\n                          {getInitials(customer.fullname)}\n                        </Avatar>\n                        <Typography color=\"textPrimary\" variant=\"body1\">\n                          {customer.fullname}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell>{customer.email}</TableCell>\n                    <TableCell>{customer.status}</TableCell>\n                    <TableCell align=\"center\">\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"small\"\n                        style={{ marginRight: '10px' }}\n                        startIcon={<EditIcon />}\n                        onClick={() => handleClickOpen(customer.id)}\n                        onClick={() => handleEditButton(customer)}\n                      >\n                        Edit\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        size=\"small\"\n                        startIcon={<DeleteIcon />}\n                        onClick={() => handleClickOpen(customer.id)}\n                      >\n                        Delete\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Box>\n        </PerfectScrollbar>\n        \n      </Card>\n      <Dialog\n        open={delOpen}\n        onClose={handleDelClose}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"draggable-dialog-title\"\n      >\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n          {loading ? <CircularProgress style={{ color: 'white' }} /> : 'Delete'}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>Are You sure Delete this User ?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleDelClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => delUser()} color=\"primary\">\n            {loading1 ? <CircularProgress /> : 'Delete'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={addFormOpen}\n        onClose={handleDelClose}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"draggable-dialog-title\"\n      >\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n          Add New User\n        </DialogTitle>\n        <DialogContent>\n          <AddNewForm\n            refreshData={{\n              refresh,\n              setRefresh\n            }}\n            setAddFormOpen={setAddFormOpen}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            autoFocus\n            onClick={() => setAddFormOpen(false)}\n            color=\"primary\"\n          >\n            Cancel\n          </Button>\n          <Button onClick={() => setAddFormOpen(false)} color=\"primary\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={editOpen}\n        onClose={() => setEditOpen(false)}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"draggable-dialog-title\"\n      >\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n          Edit User\n        </DialogTitle>\n        <DialogContent>\n          <EditForm\n            editRecord={editRecord}\n            refreshData={{\n              refresh,\n              setRefresh\n            }}\n            setEditOpen={setEditOpen}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={() => setEditOpen(false)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => setEditOpen(false)} color=\"primary\">\n            Update\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\n\nexport default CustomerListResults;\n","import { Helmet } from 'react-helmet';\nimport { Box, Container, Pagination } from '@material-ui/core';\nimport CustomerListResults from '../components/customer/CustomerListResults';\nimport { useState } from 'react';\n\n\n\nconst CustomerList = () => {\n\n  const [page, setPage] = useState(1)\n\n  const handleChangePage = (e,newPage)=>{\n\n    setPage(newPage)\n    \n  }\n\n  return(\n    <>\n      <Helmet>\n        <title>Customers | Trade Max</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3\n        }}\n      >\n        <Container maxWidth={false}>\n       \n          <Box sx={{ pt: 3 }}>\n            <CustomerListResults page={page} />\n            <Box sx={{ pt: 3,display:\"flex\", justifyContent:\"center\" }}>\n            <Pagination  count={10} onChange={handleChangePage} color=\"primary\" />\n            </Box>\n          </Box> \n        </Container>\n        \n      </Box>\n      \n    </>\n  )\n};\n\nexport default CustomerList;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport MoneyIcon from '@material-ui/icons/Money';\nimport { red } from '@material-ui/core/colors';\n\nconst Budget = (props) => (\n  <Card\n    sx={{ height: '100%' }}\n    {...props}\n  >\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"h6\"\n          >\n            BUDGET\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h3\"\n          >\n            $24,000\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: red[600],\n              height: 56,\n              width: 56\n            }}\n          >\n            <MoneyIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          pt: 2,\n          display: 'flex',\n          alignItems: 'center'\n        }}\n      >\n        <ArrowDownwardIcon sx={{ color: red[900] }} />\n        <Typography\n          sx={{\n            color: red[900],\n            mr: 1\n          }}\n          variant=\"body2\"\n        >\n          12%\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"caption\"\n        >\n          Since last month\n        </Typography>\n      </Box>\n    </CardContent>\n  </Card>\n);\n\nexport default Budget;\n","import moment from \"moment\";\nimport { v4 as uuid } from \"uuid\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Chip,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n} from \"@material-ui/core\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\n\nconst orders = [\n  {\n    id: uuid(),\n    ref: \"CDD1049\",\n    amount: 30.5,\n    customer: {\n      name: \"Ekaterina Tankova\",\n    },\n    createdAt: 1555016400000,\n    status: \"pending\",\n  },\n  {\n    id: uuid(),\n    ref: \"CDD1048\",\n    amount: 25.1,\n    customer: {\n      name: \"Cao Yu\",\n    },\n    createdAt: 1555016400000,\n    status: \"delivered\",\n  },\n  {\n    id: uuid(),\n    ref: \"CDD1047\",\n    amount: 10.99,\n    customer: {\n      name: \"Alexa Richardson\",\n    },\n    createdAt: 1554930000000,\n    status: \"refunded\",\n  },\n  {\n    id: uuid(),\n    ref: \"CDD1046\",\n    amount: 96.43,\n    customer: {\n      name: \"Anje Keizer\",\n    },\n    createdAt: 1554757200000,\n    status: \"pending\",\n  },\n  {\n    id: uuid(),\n    ref: \"CDD1045\",\n    amount: 32.54,\n    customer: {\n      name: \"Clarke Gillebert\",\n    },\n    createdAt: 1554670800000,\n    status: \"delivered\",\n  },\n  {\n    id: uuid(),\n    ref: \"CDD1044\",\n    amount: 16.76,\n    customer: {\n      name: \"Adam Denisov\",\n    },\n    createdAt: 1554670800000,\n    status: \"delivered\",\n  },\n];\n\nconst Orders = (props) => (\n  <Card {...props}>\n    <CardHeader title=\"Latest Orders\" />\n    <Divider />\n    <PerfectScrollbar>\n      <Box sx={{ minWidth: 800 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Order Ref</TableCell>\n              <TableCell>Customer</TableCell>\n              <TableCell sortDirection=\"desc\">\n                <Tooltip enterDelay={300} title=\"Sort\">\n                  <TableSortLabel active direction=\"desc\">\n                    Date\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n              <TableCell>Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {orders.map((order) => (\n              <TableRow hover key={order.id}>\n                <TableCell>{order.ref}</TableCell>\n                <TableCell>{order.customer.name}</TableCell>\n                <TableCell>\n                  {moment(order.createdAt).format(\"DD/MM/YYYY\")}\n                </TableCell>\n                <TableCell>\n                  <Chip color=\"primary\" label={order.status} size=\"small\" />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Box>\n    </PerfectScrollbar>\n    <Box\n      sx={{\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        p: 2,\n      }}\n    >\n      <Button\n        color=\"primary\"\n        endIcon={<ArrowRightIcon />}\n        size=\"small\"\n        variant=\"text\"\n      >\n        View all\n      </Button>\n    </Box>\n  </Card>\n);\n\nexport default Orders;\n","import { v4 as uuid } from 'uuid';\nimport moment from 'moment';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText\n} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst products = [\n  {\n    id: uuid(),\n    name: 'Dropbox',\n    imageUrl: '/static/images/products/product_1.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Medium Corporation',\n    imageUrl: '/static/images/products/product_2.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Slack',\n    imageUrl: '/static/images/products/product_3.png',\n    updatedAt: moment().subtract(3, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Lyft',\n    imageUrl: '/static/images/products/product_4.png',\n    updatedAt: moment().subtract(5, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'GitHub',\n    imageUrl: '/static/images/products/product_5.png',\n    updatedAt: moment().subtract(9, 'hours')\n  }\n];\n\nconst LatestProducts = (props) => (\n  <Card {...props}>\n    <CardHeader\n      subtitle={`${products.length} in total`}\n      title=\"Latest Products\"\n    />\n    <Divider />\n    <List>\n      {products.map((product, i) => (\n        <ListItem\n          divider={i < products.length - 1}\n          key={product.id}\n        >\n          <ListItemAvatar>\n            <img\n              alt={product.name}\n              src={product.imageUrl}\n              style={{\n                height: 48,\n                width: 48\n              }}\n            />\n          </ListItemAvatar>\n          <ListItemText\n            primary={product.name}\n            secondary={`Updated ${product.updatedAt.fromNow()}`}\n          />\n          <IconButton\n            edge=\"end\"\n            size=\"small\"\n          >\n            <MoreVertIcon />\n          </IconButton>\n        </ListItem>\n      ))}\n    </List>\n    <Divider />\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'flex-end',\n        p: 2\n      }}\n    >\n      <Button\n        color=\"primary\"\n        endIcon={<ArrowRightIcon />}\n        size=\"small\"\n        variant=\"text\"\n      >\n        View all\n      </Button>\n    </Box>\n  </Card>\n);\n\nexport default LatestProducts;\n","import { Bar } from 'react-chartjs-2';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  colors\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst Sales = (props) => {\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: colors.indigo[500],\n        data: [18, 5, 19, 27, 29, 19, 20],\n        label: 'This year'\n      },\n      {\n        backgroundColor: colors.grey[200],\n        data: [11, 20, 12, 29, 30, 25, 13],\n        label: 'Last year'\n      }\n    ],\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\n  };\n\n  const options = {\n    animation: false,\n    cornerRadius: 20,\n    layout: { padding: 0 },\n    legend: { display: false },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          barThickness: 12,\n          maxBarThickness: 10,\n          barPercentage: 0.5,\n          categoryPercentage: 0.5,\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.paper,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Card {...props}>\n      <CardHeader\n        action={(\n          <Button\n            endIcon={<ArrowDropDownIcon />}\n            size=\"small\"\n            variant=\"text\"\n          >\n            Last 7 days\n          </Button>\n        )}\n        title=\"Latest Sales\"\n      />\n      <Divider />\n      <CardContent>\n        <Box\n          sx={{\n            height: 400,\n            position: 'relative'\n          }}\n        >\n          <Bar\n            data={data}\n            options={options}\n          />\n        </Box>\n      </CardContent>\n      <Divider />\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          p: 2\n        }}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nexport default Sales;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  LinearProgress,\n  Typography\n} from '@material-ui/core';\nimport { orange } from '@material-ui/core/colors';\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\n\nconst TasksProgress = (props) => (\n  <Card\n    sx={{ height: '100%' }}\n    {...props}\n  >\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"h6\"\n          >\n            TASKS PROGRESS\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h3\"\n          >\n            75.5%\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: orange[600],\n              height: 56,\n              width: 56\n            }}\n          >\n            <InsertChartIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box sx={{ pt: 3 }}>\n        <LinearProgress\n          value={75.5}\n          variant=\"determinate\"\n        />\n      </Box>\n    </CardContent>\n  </Card>\n);\n\nexport default TasksProgress;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\n\nconst TotalCustomers = (props) => (\n  <Card {...props}>\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"h6\"\n          >\n            TOTAL CUSTOMERS\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h3\"\n          >\n            1,600\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: green[600],\n              height: 56,\n              width: 56\n            }}\n          >\n            <PeopleIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          pt: 2\n        }}\n      >\n        <ArrowUpwardIcon sx={{ color: green[900] }} />\n        <Typography\n          variant=\"body2\"\n          sx={{\n            color: green[900],\n            mr: 1\n          }}\n        >\n          16%\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"caption\"\n        >\n          Since last month\n        </Typography>\n      </Box>\n    </CardContent>\n  </Card>\n);\n\nexport default TotalCustomers;\n","import {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport { indigo } from '@material-ui/core/colors';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nconst TotalProfit = (props) => (\n  <Card {...props}>\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"h6\"\n          >\n            TOTAL PROFIT\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h3\"\n          >\n            $23,200\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: indigo[600],\n              height: 56,\n              width: 56\n            }}\n          >\n            <AttachMoneyIcon />\n          </Avatar>\n        </Grid>\n      </Grid>\n    </CardContent>\n  </Card>\n);\n\nexport default TotalProfit;\n","import { Doughnut } from 'react-chartjs-2';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Typography,\n  colors,\n  useTheme\n} from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport TabletIcon from '@material-ui/icons/Tablet';\n\nconst TrafficByDevice = (props) => {\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        data: [63, 15, 22],\n        backgroundColor: [\n          colors.indigo[500],\n          colors.red[600],\n          colors.orange[600]\n        ],\n        borderWidth: 8,\n        borderColor: colors.common.white,\n        hoverBorderColor: colors.common.white\n      }\n    ],\n    labels: ['Desktop', 'Tablet', 'Mobile']\n  };\n\n  const options = {\n    animation: false,\n    cutoutPercentage: 80,\n    layout: { padding: 0 },\n    legend: {\n      display: false\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    tooltips: {\n      backgroundColor: theme.palette.background.paper,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  const devices = [\n    {\n      title: 'Desktop',\n      value: 63,\n      icon: LaptopMacIcon,\n      color: colors.indigo[500]\n    },\n    {\n      title: 'Tablet',\n      value: 15,\n      icon: TabletIcon,\n      color: colors.red[600]\n    },\n    {\n      title: 'Mobile',\n      value: 23,\n      icon: PhoneIcon,\n      color: colors.orange[600]\n    }\n  ];\n\n  return (\n    <Card {...props}>\n      <CardHeader title=\"Traffic by Device\" />\n      <Divider />\n      <CardContent>\n        <Box\n          sx={{\n            height: 300,\n            position: 'relative'\n          }}\n        >\n          <Doughnut\n            data={data}\n            options={options}\n          />\n        </Box>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            pt: 2\n          }}\n        >\n          {devices.map(({\n            color,\n            icon: Icon,\n            title,\n            value\n          }) => (\n            <Box\n              key={title}\n              sx={{\n                p: 1,\n                textAlign: 'center'\n              }}\n            >\n              <Icon color=\"action\" />\n              <Typography\n                color=\"textPrimary\"\n                variant=\"body1\"\n              >\n                {title}\n              </Typography>\n              <Typography\n                style={{ color }}\n                variant=\"h2\"\n              >\n                {value}\n                %\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default TrafficByDevice;\n","import { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Grid\n} from '@material-ui/core';\nimport Budget from 'src/components/dashboard//Budget';\nimport LatestOrders from 'src/components/dashboard//LatestOrders';\nimport LatestProducts from 'src/components/dashboard//LatestProducts';\nimport Sales from 'src/components/dashboard//Sales';\nimport TasksProgress from 'src/components/dashboard//TasksProgress';\nimport TotalCustomers from 'src/components/dashboard//TotalCustomers';\nimport TotalProfit from 'src/components/dashboard//TotalProfit';\nimport TrafficByDevice from 'src/components/dashboard//TrafficByDevice';\n\nconst Dashboard = () => (\n  <>\n    <Helmet>\n      <title>Dashboard | Trade Max</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <Budget />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalCustomers />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TasksProgress />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalProfit sx={{ height: '100%' }} />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <Sales />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <TrafficByDevice sx={{ height: '100%' }} />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <LatestProducts sx={{ height: '100%' }} />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <LatestOrders />\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default Dashboard;\n","import { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport * as apiLinks from '../services/apiLinks'\nimport { Formik } from 'formik';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport FacebookIcon from 'src/icons/Facebook';\nimport GoogleIcon from 'src/icons/Google';\nimport { useGetSetPost } from 'src/services/services';\n// import { values } from 'lodash-es';\n// import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Login = () => {\n \n  const navigate = useNavigate()\n  const  {loading, postApi, apiError, data} =useGetSetPost()\n\n\n  const submit = (values) => {\n    \n     const body = {email:values.email, password:values.password}\n\n     const successActions = (data)=>{\n       localStorage.setItem(\"token\",data)\n      //  toast.success(\"Login Successfully!!\");\n      navigate('/app/dashboard', { replace: true })\n      \n     }\n     \n    postApi(apiLinks.ADMIN_LOGIN, body, successActions)\n  }\n\n\n\n  return (\n    <>\n      <Helmet>\n        <title>Login | TradeMax</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center'\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              password: ''\n            }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n              password: Yup.string().max(255).required('Password is required')\n            })}\n            onSubmit={ async(values) => {\n              \n             await submit(values);\n             \n              \n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                \n                <Box\n                  sx={{\n                    pb: 1,\n                    pt: 3\n                  }}\n                >\n                  <Typography\n                    align=\"center\"\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                  >\n                    Login to TradeMax Admin Panel with email address\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box sx={{ py: 2 }}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                  {!loading ? \"Sign in now\" : <CircularProgress color=\"secondary\" /> }\n                  </Button>\n                  {/* <small style={{color :\"red\", fontSize:\"16px\"}} >{apiError}</small> */}\n                </Box>\n                \n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Login;\n","import { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Typography\n} from '@material-ui/core';\n\nconst NotFound = () => (\n  <>\n    <Helmet>\n      <title>404 | TradeMax</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center'\n      }}\n    >\n      <Container maxWidth=\"md\">\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"h1\"\n        >\n          404: The page you are looking for isn’t here\n        </Typography>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          variant=\"subtitle2\"\n        >\n          You either tried some shady route or you came here by mistake.\n          Whichever it is, try using the navigation\n        </Typography>\n        <Box sx={{ textAlign: 'center' }}>\n          <img\n            alt=\"Under development\"\n            src=\"/static/images/undraw_page_not_found_su7k.svg\"\n            style={{\n              marginTop: 50,\n              display: 'inline-block',\n              maxWidth: '100%',\n              width: 560\n            }}\n          />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default NotFound;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  Typography,\n  getAlertTitleUtilityClass,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { useGetSetPost } from \"src/services/services\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nconst ProductListToolbar = ({setSubcatId,setAddFormOpen,...rest}) => {\n  const classes = useStyles();\n  const [cats, setCats] = useState([]);\n  const [subCats, setSubCats] = useState([]);\n  const [catsData, setCatsData] = useState({ cat: \"\", subCat: \"\" });\n  const { postApi, loading } = useGetSetPost();\n\n  useEffect(() => {\n    const catSucccesActions = (data) => {\n      setCats(data);\n    };\n    postApi(\"categories/getCategories\", {}, catSucccesActions);\n  }, []);\n\n  const selectCat = (id) => {\n    const subCatSucccesActions = (data) => {\n      setSubCats(data);\n    };\n    postApi(\n      \"categories/getCategories\",\n      { category_id: id },\n      subCatSucccesActions\n    );\n  };\n\n  const getAll = () => {\n    setSubcatId(\"\");\n    setCatsData({ cat: \"\", subCat: \"\" });\n  };\n\n  const catClick = (e) => {\n    setCatsData({ ...catsData, cat: e.target.value });\n  };\n\n  const subCatClick = (e) => {\n    setCatsData({ ...catsData, subCat: e.target.value });\n  };\n\n  return (\n    <Box {...rest}>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n        }}\n      >\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => setAddFormOpen(true)}\n        >\n          Add Product\n        </Button>\n      </Box>\n      <Box sx={{ mt: 3 }}>\n        <Card>\n          <CardContent>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n                alignItems: \"center\",\n              }}\n            >\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => getAll()}\n              >\n                Get All Products\n              </Button>\n              <Typography variant=\"h5\" color=\"primary\">\n                Get Products By Catagories\n              </Typography>\n              <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"grouped-select\">Main Catagory</InputLabel>\n                <Select\n                  defaultValue=\"\"\n                  value={catsData.cat}\n                  onChange={(e) => catClick(e)}\n                  id=\"grouped-select\"\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n\n                  {cats.map((item) => (\n                    <MenuItem\n                      value={item._id}\n                      onClick={() => selectCat(item._id)}\n                    >\n                     \n                      {item.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"grouped-select\">Sub Catagory</InputLabel>\n                <Select\n                  defaultValue=\"\"\n                  value={catsData.subCat}\n                  onChange={(e) => subCatClick(e)}\n                  id=\"grouped-select\"\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  {subCats.map((item) => (\n                    <MenuItem\n                      value={item._id}\n                      onClick={() => setSubcatId(item._id)}\n                    >\n                      {item.name}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ProductListToolbar;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport Draggable from 'react-draggable';\nimport { useEffect } from 'react';\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  )\n}\n\nexport default function DraggableDialog({open, setOpen, title, contentText,component:Component,...rest}) {\n\n\n  useEffect(() => {\n   \n    console.log(\"Got\");\n\n  }, [open])\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"draggable-dialog-title\"\n      >\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n          {title}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {contentText}\n          </DialogContentText>\n        <Component {...rest} />\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from \"react\";\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\nimport { blue } from \"@material-ui/core/colors\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\n\nexport const useStyles = makeStyles((theme) => ({\n    icon: {\n      marginRight: theme.spacing(2),\n    },\n    heroContent: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n      marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n      paddingTop: theme.spacing(8),\n      paddingBottom: theme.spacing(8),\n    },\n    card: {\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n    cardMedia: {\n      paddingTop: \"56.25%\", // 16:9\n    },\n    cardContent: {\n      flexGrow: 1,\n    },\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(6),\n    },\n    \".css-1y6f8wu-MuiDialogContent-root\":{\n        overflowY:\"none\"\n    },\n    \".css-hz1bth-MuiDialog-container\":{\n        height:\"500px\"\n    }\n  }));\n\nconst ViewImage = ({ imageData }) => {\n\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        // Purple and green play nicely together.\n        main: blue[600],\n      },\n      secondary: {\n        // This is green.A700 as hex.\n        main: \"#11cb5f\",\n      },\n    },\n  });\n\n  const classes = useStyles();\n  return (\n    \n    <div style={{width:\"500px\" ,height:\"300px\"}}>\n      <Grid item xs={12} sm={12} md={12}>\n        <Card className={classes.card}>\n          <CardMedia\n            className={classes.cardMedia}\n            image={imageData.url}\n            title=\"Image title\"\n          />\n        </Card>\n      </Grid>\n      </div>\n    \n  );\n};\n\nexport default ViewImage;\n","import PropTypes from \"prop-types\";\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DraggableDialog from \"../DraggableDialog\";\nimport ViewImage from \"./ViewImage\";\nimport { useEffect, useState } from \"react\";\nimport { orderBy } from \"lodash-es\";\nconst ProductCard = ({\n  product,\n  setProductId,\n  setProductName,\n  setDelOpen,\n  setEditFormOpen,\n  setProductData,\n  ...rest\n}) => {\n  const [openImagePopUp, setOpenImagePopUp] = useState(false);\n  const [imageData, setImageData] = useState(false);\n  const [imageLink, setImageLink] = useState(\"\");\n\n  useEffect(() => {\n    if (product.productFiles[0]) {\n      setImageLink(product.productFiles[0].url);\n    } else {\n      setImageLink(\n        \"https://www.cureuppharma.in/wp-content/uploads/2018/06/dummy.jpg\"\n      );\n    }\n  }, []);\n\n  const openImage = (image) => {\n    setOpenImagePopUp(true);\n    setImageData(image);\n  };\n\n  const handleDelOpen = (id, name) => {\n    setDelOpen(true);\n    setProductId(id);\n    setProductName(name);\n  };\n\n  const handleEditOpen = (product) => {\n    setEditFormOpen(true);\n    setProductData(product);\n  };\n\n  return (\n    <Card\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n      }}\n      {...rest}\n    >\n      <Box sx={{ p: 2 }}>\n        <Grid container spacing={2} sx={{ justifyContent: \"space-between \" }}>\n          <Grid\n            item\n            sx={{\n              alignItems: \"center\",\n              display: \"flex\",\n            }}\n          >\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => handleEditOpen(product)}\n              size=\"small\"\n              startIcon={<EditIcon />}\n            ></Button>\n          </Grid>\n          <Grid\n            item\n            sx={{\n              alignItems: \"center\",\n              display: \"flex\",\n            }}\n          >\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              size=\"small\"\n              onClick={() => handleDelOpen(product._id, product.name)}\n              startIcon={<DeleteIcon />}\n            ></Button>\n          </Grid>\n        </Grid>\n      </Box>\n      <CardContent>\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            pb: 3,\n          }}\n        >\n          <img alt=\"Product\" src={imageLink} height=\"150px\" width=\"200px\" />\n        </Box>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n          variant=\"h4\"\n        >\n          {product.name}\n        </Typography>\n        <Typography align=\"center\" color=\"textPrimary\" variant=\"body1\">\n          {product.description}\n        </Typography>\n        <Typography align=\"center\" color=\"textPrimary\" variant=\"body1\">\n          <b>Price:</b> {product.price}\n        </Typography>\n        <Typography align=\"center\" color=\"textPrimary\" variant=\"body1\">\n          <b>Variation:</b> {product.variation.key}\n        </Typography>\n      </CardContent>\n      <Box sx={{ flexGrow: 1 }} />\n      <Divider />\n      <Box sx={{ p: 2 }}>\n        <Grid\n          container\n          spacing={2}\n          sx={{\n            justifyContent: \"space-between\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            overflowX: \"scroll\",\n            width: \"100%\",\n            height: \"100px\",\n          }}\n        >\n          {product.productFiles.map((image) => {\n            return (\n              <div\n                style={{ width: \"50%\", display: \"flex\", flexDirection: \"row\" }}\n              >\n                <img\n                  src={image.url}\n                  width=\"120px\"\n                  onClick={() => openImage(image)}\n                  height=\"80px\"\n                  alt=\"image\"\n                />\n              </div>\n            );\n          })}\n        </Grid>\n      </Box>\n      <DraggableDialog\n        open={openImagePopUp}\n        title=\"View Image\"\n        component={ViewImage}\n        imageData={imageData}\n        setOpen={setOpenImagePopUp}\n      />\n    </Card>\n  );\n};\n\nexport default ProductCard;\n","import React, { useState } from \"react\";\n\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport { useGetSetPost } from \"src/services/services\";\nimport axios from 'axios'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: \"relative\",\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    \"&:hover\": {\n      backgroundColor: green[700],\n    },\n  },\n  fabProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nexport default function ImagesUpload({ refresh,setRefresh,setAddFormOpen,productId }) {\n  const [imagePreview, setImagePreview] = useState([]);\n  const [imageRaw, setImageRaw] = useState([]);\n  const classes = useStyles();\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = useState(false)\n  let formData = new FormData();\n\n  const { postApi, data } = useGetSetPost();\n\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n  });\n\n  const handleChange = (e) => {\n    const files = Array.from(e.target.files);\n\n    files.map((file) => {\n      setImagePreview((imagePreview) => [\n        ...imagePreview,\n        URL.createObjectURL(file),\n      ]);\n    });\n    setImageRaw(files);\n  };\n\n  const remove = (i) => {\n    setImagePreview((img) => {\n      img.splice(i, 1);\n      return [...img];\n    });\n    imageRaw.splice(i, 1);\n    setImageRaw([...imageRaw]);\n  };\n\n  const Upload = async (e) => {\n    e.preventDefault();\n    setLoading(true)\n    setSuccess(false);\n    const successActions = () => {\n      setLoading(false);\n    };\n    const errActions = (err) => {\n      alert(err);\n     \n      setSuccess(false);\n    };\n    \n    const length = imageRaw.length;\n\n    for (let i = 0; i <= length; i++) {\n      formData.append(\"files[]\", imageRaw[i]);\n    }\n\n    try{\n      const response= await axios.put(`http://13.54.226.124:4604/api/products/uploadProductFiles/${productId}`,formData)\n      setLoading(false)\n      setRefresh(!refresh)\n      setAddFormOpen(false)\n      setImagePreview([]);\n     }\n     catch(error){\n       console.log(\"error\")\n       setLoading(false)\n       setImagePreview([]);\n     }\n\n    \n    \n  };\n  return (\n    <center>\n      <div style={{ marginTop: \"7vh\" }}>\n        <h3>Upload Images</h3>\n        {imagePreview ? (\n          <div>\n            {imagePreview.map((img, i) => (\n              <div key={i}>\n                <img src={img} alt=\"dummy\" width=\"150\" height=\"150\" />\n                <button onClick={() => remove(i)}> Remove</button>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div>\n            <span className=\"fa-stack fa-2x mt-3 mb-2\">\n              <i className=\"fas fa-circle fa-stack-2x\" />\n              <i className=\"fas fa-store fa-stack-1x fa-inverse\" />\n            </span>\n            <h5 className=\"text-center\">Upload your photo</h5>\n          </div>\n        )}\n\n        <input\n          type=\"file\"\n          id=\"upload-button\"\n          onChange={(e) => handleChange(e)}\n          multiple\n        />\n        <br />\n        <div\n          style={{ marginLeft: \"27%\", marginTop: \"5%\" }}\n          className={classes.root}\n        >\n          <div className={classes.wrapper}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={buttonClassname}\n              disabled={loading}\n              onClick={(e) => Upload(e)}\n            >\n              Upload\n            </Button>\n            {loading && (\n              <CircularProgress size={24} className={classes.buttonProgress} />\n            )}\n          </div>\n        </div>\n      </div>\n    </center>\n  );\n}","import { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport * as Yup from \"yup\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport \"./AddProduct.css\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport { Formik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { useRef, useEffect, useState, isValidElement } from \"react\";\nimport { useGetSetPost } from \"src/services/services\";\nimport ImagesUpload from \"./ImagesUpload\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiOutlinedInput-input \": {\n      width: \"80%\",\n      margin: \"20px\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: \"400px\",\n    },\n  },\n  select: {\n    color: \"red\",\n  },\n  dynamicFormContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n  },\n  dynamicFormToolbar: {\n    display: \"flex\",\n  },\n}));\n\nlet isValid = false;\n\nlet InitialVariation = {\n  value: \"\",\n  price: \"\",\n};\n\nlet initialValues = {};\n\nconst AddProduct = ({\n  refresh,\n  setRefresh,\n  setAddFormOpen,\n  edit,\n  productData,\n}) => {\n  if (edit) {\n    initialValues = {\n      name: productData.name,\n      units: productData.units,\n      price: productData.price,\n      description: productData.description,\n      content: productData.content,\n      status: productData.status,\n      key: productData.variation.key,\n    };\n    InitialVariation = productData.variation.items;\n  } else {\n    initialValues = {};\n    InitialVariation = [{}];\n  }\n\n  const navigate = useNavigate();\n  const classes = useStyles();\n  const [catagories, setCatagories] = useState([]);\n  const [subCatagories, setSubCatagories] = useState([]);\n  const [catRefresh, setCatRefresh] = useState(false);\n  const { postApi, data, putApi, loading } = useGetSetPost();\n  const [subCatId, setSubCatId] = useState(\"\");\n  const [variationItems, setVariationItems] = useState(InitialVariation);\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n  const [productAdded, setProductAdded] = useState(false);\n  const [productId, setProductId] = useState(\"\");\n  let subcatId;\n  const catSuccessActions = (data) => {\n    setCatagories(data);\n  };\n\n  const subCatSuccessActions = (data) => {\n    setSubCatagories(data);\n  };\n\n  const addVariationItem = () => {\n    setVariationItems((variationItems) => [\n      ...variationItems,\n      InitialVariation,\n    ]);\n  };\n\n  const delVariationItem = (index1) => {\n    const updated = variationItems.filter((item, index) => index != index1);\n    setVariationItems(updated);\n  };\n\n  const handleVariationInput = (e, index1) => {\n    const { name, value } = e.target;\n    const updatedArray = variationItems.map((item, index) => {\n      if (index === index1) {\n        item = { ...item, [name]: value };\n      }\n      return item;\n    });\n\n    setVariationItems(updatedArray);\n  };\n\n  const selectMainCat = (e) => {\n    setSubCatId(e.target.value);\n  };\n\n  const selectSubCat = (e) => {\n    subcatId = e.target.value;\n    setValues((values) => ({ ...values, subCatagory: e.target.value }));\n  };\n\n  useEffect(() => {\n    postApi(\"/categories/getCategories\", {}, catSuccessActions);\n  }, [catRefresh]);\n\n  useEffect(() => {\n    if (subCatId) {\n      postApi(\n        \"/categories/getCategories\",\n        {\n          category_id: subCatId,\n        },\n        subCatSuccessActions\n      );\n    }\n  }, [subCatId]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues((values) => ({ ...values, [name]: value }));\n\n    switch (name) {\n      case \"name\": {\n        const regex = /^[a-zA-Z ]{2,30}$/;\n        if (!regex.test(value)) {\n          setErrors((errors) => ({\n            ...errors,\n            [name]: \"Please Enter a valid name\",\n          }));\n        } else {\n          setErrors((errors) => ({ ...errors, [name]: \"\" }));\n        }\n        break;\n      }\n      case \"units\": {\n        const regex = /^[a-zA-Z ]{2,30}$/;\n        if (!value >= 1 && value <= 1000) {\n          setErrors((errors) => ({ ...errors, [name]: \"Units are not valid\" }));\n        } else {\n          setErrors((errors) => ({ ...errors, [name]: \"\" }));\n        }\n        break;\n      }\n\n      case \"description\": {\n        const regex = /^[a-zA-Z ]{2,30}$/;\n        if (!value.length) {\n          setErrors((errors) => ({\n            ...errors,\n            [name]: \"Please enter description\",\n          }));\n        } else {\n          setErrors((errors) => ({ ...errors, [name]: \"\" }));\n        }\n        break;\n      }\n       case \"status\": {\n        const regex = /^[a-zA-Z ]{2,30}$/;\n        if (!value.length) {\n          setErrors((errors) => ({\n            ...errors,\n            [name]: \"Please select an option\",\n          }));\n        } else {\n          setErrors((errors) => ({ ...errors, [name]: \"\" }));\n        }\n        break;\n      }\n    }\n  };\n\n const setValidation = (body) => {\n    console.log(body);\n    if(!body.name){\n      return alert('Please Enter a valid name');\n    }else if (!body.status){\n      return alert('Please Select a status');\n    }else if (!body.units){\n      return alert('Please Enter a units');\n    }else if (!body.price){\n      return alert('Please Enter a price');\n    }else if (!body.subCategory){\n      return alert('Please Select a subCategory');\n    }else if (!body.content){\n      return alert('Please Enter a content');\n    }else if (!body.description){\n      return alert('Please Enter a description');\n    }else if (!body.variation.key){\n      return alert('Please Select a Variation Name');\n    }else if (!body.variation.items[0].value){\n      return alert('Please Select a Varient Value');\n    }else if (!body.variation.items[0].price){\n      return alert('Please Select a Varient Price');\n    }else {\n      isValid = true;\n    }\n  }\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    const body = {\n      name: values.name,\n      units: values.units,\n      content: values.content,\n      description: values.description,\n      status: values.status,\n      price: values.price,\n      subCategory: values.subCatagory,\n      variation: {\n        key: values.key,\n        items: variationItems,\n      },\n    };\n\n    // console.log(body);\n    setValidation(body);\n\n    const successActions = (data) => {\n      setProductAdded(true);\n      setRefresh(!refresh);\n      setProductId(data._id);\n    };\n\n    if(isValid){\n      if (edit) {\n        return putApi(\n          `/products/update/${productData._id}`,\n          body,\n          successActions\n          );\n        }\n        postApi(\"/products/addProduct\", body, successActions);\n      }\n};\n      \n  return (\n    <>\n      <Helmet>\n        <title>Add Product</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: \"background.default\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: \"100%\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Container maxWidth=\"md\" spacing={2}>\n          {!productAdded && (\n            <form>\n              <Box sx={{ mb: 3 }}>\n                <Typography color=\"textPrimary\" variant=\"h2\">\n                  {edit ? \"Edit Product\" : \"Add Product\"}\n                </Typography>\n              </Box>\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                <Grid item style={{ marginRight: \"30px\" }} xs={6}>\n                  <TextField\n                    error={Boolean(errors.name)}\n                    fullWidth\n                    helperText={errors.name}\n                    label=\"Name\"\n                    margin=\"normal\"\n                    name=\"name\"\n                    onChange={(e) => handleChange(e)}\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    // error={Boolean(errors.units)}\n                    fullWidth\n                    // helperText={errors.units}\n                    label=\"Units\"\n                    margin=\"normal\"\n                    name=\"units\"\n                    type=\"number\"\n                    onChange={(e) => handleChange(e)}\n                    value={values.units}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    fullWidth\n                    type=\"number\"\n                    label=\"Price\"\n                    margin=\"normal\"\n                    name=\"price\"\n                    onChange={(e) => handleChange(e)}\n                    value={values.price}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item xs={6}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                    }}\n                  >\n                    <FormControl className={classes.formControl}>\n                      <InputLabel htmlFor=\"grouped-native-select\">\n                        Status\n                      </InputLabel>\n                      <Select\n                       displayEmpty={Boolean(errors.status)}\n                        native\n                        defaultValue={values.status}\n                        name=\"status\"\n                        onChange={(e) =>\n                          setValues((values) => ({\n                            ...values,\n                            status: e.target.value,\n                          }))\n                        }\n                        id=\"grouped-native-select\"\n                      >\n                        <option aria-label=\"None\" value=\"not selected\">\n                          Select Status\n                        </option>\n                        <option value=\"active\">Active</option>\n                        <option value=\"inactive\">Inactive</option>\n                      </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                      <InputLabel htmlFor=\"grouped-native-select\">\n                        Catagory\n                      </InputLabel>\n                      <Select\n                        native\n                        defaultValue=\"\"\n                        onChange={(e) => selectMainCat(e)}\n                        id=\"grouped-native-select\"\n                      >\n                        <option aria-label=\"None\" value=\"not selected\">\n                          Select A catagory\n                        </option>\n                        {catagories.map((catagory) => {\n                          return (\n                            <option value={catagory._id}>\n                              {catagory.name}\n                            </option>\n                          );\n                        })}\n                      </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                      <InputLabel htmlFor=\"grouped-native-select\">\n                        Sub-Catagory\n                      </InputLabel>\n                      <Select\n                        name=\"subCatagory\"\n                        native\n                        defaultValue=\"\"\n                        id=\"grouped-native-select\"\n                        onChange={(e) => selectSubCat(e)}\n                      >\n                        <option aria-label=\"None\" value=\"not selected\">\n                          Select A Subcatagory\n                        </option>\n                        {subCatagories.map((catagory) => {\n                          return (\n                            <option value={catagory._id}>\n                              {catagory.name}\n                            </option>\n                          );\n                        })}\n                      </Select>\n                    </FormControl>\n                  </div>\n                </Grid>\n              </div>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  multiline={true}\n                  label=\"Content\"\n                  margin=\"normal\"\n                  name=\"content\"\n                  value={values.content}\n                  onChange={(e) => handleChange(e)}\n                  variant=\"outlined\"\n                  rows=\"3\"\n                />\n\n                <TextField\n                  fullWidth\n                  multiline={true}\n                  label=\"Description\"\n                  margin=\"normal\"\n                  name=\"description\"\n                  onChange={(e) => handleChange(e)}\n                  variant=\"outlined\"\n                  value={values.description}\n                  rows=\"3\"\n                />\n\n                {/* <TextField\n                  error={Boolean(errors.variation)}\n                  fullWidth\n                  helperText={errors.variation}\n                  label=\"Variation Name\"\n                  margin=\"normal\"\n                  name=\"key\"\n                  onChange={(e) => handleChange(e)}\n                  value={values.key}\n                  variant=\"outlined\"\n                /> */}\n                 <Select native className={'w-100'}\n                        defaultValue=\"\"\n                        name=\"key\"\n                        // value=\"\"\n                        onChange={(e) => handleChange(e)}\n                        id=\"grouped-native-select\"\n                      >\n                        <option aria-label=\"None\" value=\"not selected\">\n                          Select Variation Name\n                        </option>\n                        <option value=\"size\">Size</option>\n                        <option value=\"color\">Color</option>\n                      </Select>\n\n                <Paper\n                  elevation={2}\n                  style={{\n                    width: \"80%\",\n                    marginLeft: \"10%\",\n                    padding: \"30px\",\n                    marginTop: \"20px\",\n                  }}\n                >\n                  {variationItems.map((item, index) => {\n                    return (\n                      <>\n                        <div\n                          style={{ justifyContent: \"space-between\" }}\n                          className={classes.dynamicFormContainer}\n                        >\n                          <Typography variant=\"subtitle1\" color=\"initial\">\n                            Varient\n                          </Typography>\n                          <div className={classes.dynamicFormToolbar}>\n                            <Button\n                              onClick={() => delVariationItem(index)}\n                              fullWidth\n                            >\n                              <DeleteForeverIcon style={{ color: \"red\" }} />\n                            </Button>\n                          </div>\n                        </div>\n                        <TextField\n                          error={Boolean(errors.value)}\n                          style={{ marginLeft: \"30px\", width: \"80%\" }}\n                          helperText={errors.value}\n                          label=\"Value\"\n                          margin=\"normal\"\n                          name=\"value\"\n                          onChange={(e) => handleVariationInput(e, index)}\n                          value={item.value}\n                          variant=\"outlined\"\n                        />\n                        <TextField\n                          error={Boolean(errors.price)}\n                          style={{ marginLeft: \"30px\", width: \"80%\" }}\n                          helperText={errors.price}\n                          label=\"Price\"\n                          margin=\"normal\"\n                          name=\"price\"\n                          onChange={(e) => handleVariationInput(e, index)}\n                          value={item.price}\n                          variant=\"outlined\"\n                        />\n                      </>\n                    );\n                  })}\n                </Paper>\n                <div className={classes.dynamicFormContainer}>\n                  <div className={classes.dynamicFormToolbar}>\n                    <Button\n                      onClick={() => addVariationItem()}\n                      fullWidth\n                      style={{ width: \"300px\" }}\n                    >\n                      <AddIcon />\n                    </Button>\n                  </div>\n                </div>\n              </Grid>\n              <Box sx={{ py: 2 }}>\n                <Button\n                  color=\"primary\"\n                  fullWidth\n                  size=\"large\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                  onClick={(e) => submitForm(e)}\n                >\n                  {!edit ? \"Add Product Now\" : \"Update Details\"}\n                </Button>\n              </Box>\n            </form>\n          )}\n          {productAdded && (\n            <ImagesUpload\n              refresh={refresh}\n              setRefresh={setRefresh}\n              setAddFormOpen={setAddFormOpen}\n              productId={productId}\n            />\n          )}\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default AddProduct;\n","import { Helmet } from \"react-helmet\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Draggable from \"react-draggable\";\nimport {\n  Box,\n  CircularProgress,\n  Container,\n  Grid,\n  makeStyles,\n  Pagination,\n  Button,\n  TablePagination,\n} from \"@material-ui/core\";\nimport ProductListToolbar from \"src/components/product/ProductListToolbar\";\nimport ProductCard from \"src/components/product//ProductCard\";\nimport { LocalDining } from \"@material-ui/icons\";\nimport { useGetSetPost } from \"src/services/services\";\nimport { useEffect, useState } from \"react\";\nimport AddProduct from \"src/components/product/AddProduct\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  paperComponent: {\n    width: \"auto\",\n    height: \"auto\",\n  },\n}));\n\nfunction PaperComponent(props) {\n  const classes = useStyles();\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nconst ProductList = () => {\n  const [products, setProducts] = useState([]);\n  const [addFormOpen, setAddFormOpen] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const { loading, data, getApi } = useGetSetPost();\n  const [delOpen, setDelOpen] = useState(false);\n  const [editFormOpen, setEditFormOpen] = useState(false);\n  const [productId, setProductId] = useState(\"\");\n  const [productName, setProductName] = useState(\"\");\n  const [loading1, setLoading1] = useState(false);\n  const [productData, setProductData] = useState({});\n  const [subcatId, setSubcatId] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const successActions = (items) => {\n    setProducts(items);\n  };\n\n  let query;\n  useEffect(() => {\n    query = `/products/getAllProducts?pageNo=${page}&pageSize=${rowsPerPage}`;\n\n    if (subcatId) {\n      query = `/products/productsBySubCategories?pageNo=${page}&pageSize=${rowsPerPage}&subCategoryId=${subcatId}`;\n    }\n\n    getApi(query, successActions);\n  }, [refresh, page, subcatId]);\n\n  const delProduct = async () => {\n    setLoading1(true);\n    const query = `http://13.54.226.124:4604/api/products/deleteProduct/${productId}`;\n    const config = {\n      headers: {\n        \"x-access-token\": localStorage.token,\n      },\n    };\n\n    try {\n      const res = await axios.delete(query, config);\n      setRefresh(!refresh);\n      setLoading1(false);\n      setDelOpen(false);\n    } catch (err) {\n      if (err.response) {\n        setLoading1(false);\n        setDelOpen(false);\n        return alert(err.response.data.message);\n      }\n      alert(err);\n    }\n  };\n\n  const handleChangePage = (e, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (e) => {\n    setRowsPerPage(e.target.value);\n    const query = `/products/getAllProducts?pageNo=${page}&pageSize=${rowsPerPage}`;\n\n    const successActions = (data) => {\n      setProductData(data);\n    };\n\n    getApi(query, successActions);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Products | TradeMax</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: \"background.default\",\n          minHeight: \"100%\",\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <ProductListToolbar\n            setSubcatId={setSubcatId}\n            setAddFormOpen={setAddFormOpen}\n          />\n          <Box sx={{ pt: 3 }}>\n            <Grid container spacing={3}>\n              {loading && (\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    minHeight: \"300px\",\n                    alignItems: \"center\",\n                    margin: \"auto\",\n                  }}\n                >\n                  <CircularProgress />\n                </div>\n              )}\n              {!loading &&\n                products.map((product) => (\n                  <Grid item key={product.id} lg={4} md={6} xs={12}>\n                    <ProductCard\n                      product={product}\n                      setDelOpen={setDelOpen}\n                      setEditFormOpen={setEditFormOpen}\n                      setProductId={setProductId}\n                      setProductName={setProductName}\n                      setProductData={setProductData}\n                    />\n                  </Grid>\n                ))}\n            </Grid>\n          </Box>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              pt: 3,\n            }}\n          >\n            <Pagination\n              count={10}\n              onChange={handleChangePage}\n              color=\"primary\"\n            />\n          </Box>\n        </Container>\n      </Box>\n      <Dialog\n        open={addFormOpen}\n        onClose={() => setAddFormOpen(false)}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"draggable-dialog-title\"\n      >\n        <DialogTitle\n          style={{ cursor: \"move\" }}\n          id=\"draggable-dialog-title\"\n        ></DialogTitle>\n        <DialogContent>\n          <AddProduct\n            refresh={refresh}\n            setRefresh={setRefresh}\n            setAddFormOpen={setAddFormOpen}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            autoFocus\n            onClick={() => setAddFormOpen(false)}\n            color=\"primary\"\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={editFormOpen}\n        onClose={() => setEditFormOpen(false)}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"draggable-dialog-title\"\n      >\n        <DialogTitle\n          style={{ cursor: \"move\" }}\n          id=\"draggable-dialog-title\"\n        ></DialogTitle>\n        <DialogContent>\n          <AddProduct\n            refresh={refresh}\n            setRefresh={setRefresh}\n            setEditFormOpen={setEditFormOpen}\n            productData={productData}\n            edit={true}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            autoFocus\n            onClick={() => setEditFormOpen(false)}\n            color=\"primary\"\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={delOpen}\n        onClose={() => setDelOpen(false)}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"draggable-dialog-title\"\n      >\n        <DialogTitle\n          style={{ cursor: \"move\" }}\n          id=\"draggable-dialog-title\"\n        ></DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Are You sure Delete {productName} ?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={() => setDelOpen(false)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => delProduct()} color=\"primary\">\n            {!loading1 ? \"Delete\" : <CircularProgress />}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default ProductList;\n","import { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core';\n\nconst Register = () => {\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <Helmet>\n        <title>Register | TradeMax</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center'\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              firstName: '',\n              lastName: '',\n              password: '',\n              policy: false\n            }}\n            validationSchema={\n              Yup.object().shape({\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                firstName: Yup.string().max(255).required('First name is required'),\n                lastName: Yup.string().max(255).required('Last name is required'),\n                password: Yup.string().max(255).required('password is required'),\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\n              })\n            }\n            onSubmit={() => {\n              // navigate('/app/dashboard', { replace: true });\n              alert(\"hello\")\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box sx={{ mb: 3 }}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Create new account\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Use your email to create new account\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  fullWidth\n                  helperText={touched.firstName && errors.firstName}\n                  label=\"First name\"\n                  margin=\"normal\"\n                  name=\"firstName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.firstName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.lastName && errors.lastName)}\n                  fullWidth\n                  helperText={touched.lastName && errors.lastName}\n                  label=\"Last name\"\n                  margin=\"normal\"\n                  name=\"lastName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.lastName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box\n                  sx={{\n                    alignItems: 'center',\n                    display: 'flex',\n                    ml: -1\n                  }}\n                >\n                  <Checkbox\n                    checked={values.policy}\n                    name=\"policy\"\n                    onChange={handleChange}\n                  />\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                  >\n                    I have read the\n                    {' '}\n                    <Link\n                      color=\"primary\"\n                      component={RouterLink}\n                      to=\"#\"\n                      underline=\"always\"\n                      variant=\"h6\"\n                    >\n                      Terms and Conditions\n                    </Link>\n                  </Typography>\n                </Box>\n                {Boolean(touched.policy && errors.policy) && (\n                  <FormHelperText error>\n                    {errors.policy}\n                  </FormHelperText>\n                )}\n                <Box sx={{ py: 2 }}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign up now\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/login\"\n                    variant=\"h6\"\n                  >\n                    Sign in\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Register;\n","import { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Container,\n  FormHelperText,\n  Link,\n  Select,\n  MenuItem,\n  TextField,\n  Typography,\n  FormControl,\n  InputLabel\n} from '@material-ui/core';\nimport ImageUpload from '../../components/product/ImagesUpload';\nimport { useGetSetPost } from 'src/services/services';\nimport { useState, useEffect } from 'react';\nimport { Refresh } from '@material-ui/icons';\nimport { useStyles } from 'src/components/product/ViewImage';\n\n\n\nconst AddCatForm = ({ refresh, setRefresh, setAddCatOpen, title, id }) => {\n  const navigate = useNavigate();\n  const { loading, postApi, data } = useGetSetPost();\n  const [imageRaw, setImageRaw] = useState(\"\")\n  const [imagePreview, setImagePreview] = useState(\"\")\n  const [catagoryName, setCategoryName] = useState(\"\");\n\n  // useEffect(() => {\n  //   // Update the document\n  //    title using the browser API\n  //   // document.title = `You clicked ${count} times`;\n  // });\n  const onChangeFiles = (e) => {\n    if (e.target.files.length) {\n      setImageRaw(e.target.files[0])\n      // eslint-disable-next-line no-undef\n      setImagePreview(URL.createObjectURL(e.target.files[0]))\n    }\n  };\n\n\n  const successActions = () => {\n    setAddCatOpen(false)\n    setRefresh(!refresh)\n  }\n\n  const handleCatagory = (e) => {\n    setCategoryName(e.target.value);\n  };\n\n  const SubmitForm = (values) => {\n    // eslint-disable-next-line no-undef\n    const formData = new FormData();\n    formData.append('name', values.firstName);\n    formData.append('file', imageRaw);\n    if (title === 'category') {\n      postApi('/categories/createCategory', formData, successActions);\n    } else {\n      formData.append('parent_id', id);\n      postApi('/categories/createSubCategory', formData, successActions);\n    }\n  };\n  const classes = useStyles();\n\n  return (\n    <>\n      <Helmet>\n        <title>Register | TradeMax</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center'\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              firstName: ''\n            }}\n            validationSchema={Yup.object().shape({\n              firstName: Yup.string()\n                .max(255)\n                .required('First name is required')\n            })}\n            onSubmit={(values) => {\n\n              // navigate('/app/dashboard', { replace: true });\n              SubmitForm(values);\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                \n\n                <TextField\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  fullWidth\n                  helperText={touched.firstName && errors.firstName}\n                  label=\"First name\"\n                  margin=\"normal\"\n                  name=\"firstName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.firstName}\n                  variant=\"outlined\"\n                />\n                \n                <div style={{ display: \"flex\", width: \"500px\", justifyContent: \"flex-end\", flexDirection: \"row-reverse\" }}>\n                  <input style={{ marginTop: \"20px\" }} type=\"file\" onChange={(e) => onChangeFiles(e)} />\n                  {imagePreview &&\n                    <img src={imagePreview} width=\"50%\" />\n                  }\n                </div>\n                <Box\n                  sx={{\n                    alignItems: 'center',\n                    display: 'flex',\n                    ml: -1\n                  }}\n                ></Box>\n\n                <Box sx={{ py: 2 }}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    {loading ? <CircularProgress /> : \"Add Now\"}\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default AddCatForm;\n","import { useState, useEffect } from 'react';\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport EditIcon from '@material-ui/icons/Edit';\nimport moment from 'moment';\nimport { Button } from '@material-ui/core';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport * as apiLinks from '../../services/apiLinks';\nimport Draggable from 'react-draggable';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/styles';\nimport getInitials from 'src/utils/getInitials';\nimport { useGetSetPost } from 'src/services/services';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  Grid\n} from '@material-ui/core';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AddCatForm from './AddCatForm';\n\nconst useStyles = makeStyles((theme) => ({\n  paperComponent: {\n    width: 'auto',\n    height: 'auto'\n  },\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minWidth: '500px',\n    minHeight: '400px',\n\n    '& > * + *': {}\n  },\n  tableRow: {\n    backgroundColor: \"green !important\",\n  },\n}));\n\nfunction PaperComponent(props) {\n  const classes = useStyles();\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nconst Catagory = ({ setId, id, catagoryName, setCatagoryName }) => {\n  const classes = useStyles();\n  <TableRow classes={{ root: classes.tableRow, }} />\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const { loading, getApi, postApi, apiError } = useGetSetPost();\n  const [catagories, setCatagories] = useState([]);\n  const [delOpen, setDelOPen] = useState(false);\n  const [addCatOpen, setAddCatOpen] = useState(false);\n  const [editOpen, setEditOpen] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [loading1, setLoading1] = useState(false);\n  const [editRecord, setEditRecord] = useState({});\n  const [selectedCategory, setSelectedCategory] = useState('')\n  const handleDelOpen = (id, name) => {\n    setId(id);\n    setCatagoryName(name);\n    setDelOPen(true);\n  };\n\n  const hanldeSelectCat = (id, name) => {\n    setId(id);\n    setCatagoryName(name);\n    setSelectedCategory(id)\n  }\n\n  const handleDelClose = () => {\n    setDelOPen(false);\n  };\n\n  const handleRow = (value) => {\n    console.log(\"check selected value\", value)\n    setSelectedCategory(value)\n  }\n\n\n  useEffect(() => {\n    const successActions = (data) => {\n      setCatagories(data);\n      hanldeSelectCat(data[0]._id, data[0].name);\n    };\n\n    postApi('/categories/getCategories', {}, successActions);\n  }, [refresh]);\n\n\n\n\n\n  const delCatagory = async () => {\n    setLoading1(true);\n    const query = `http://13.54.226.124:4604/api/categories/delete/${id}`;\n    const config = {\n      headers: {\n        // eslint-disable-next-line no-undef\n        'x-access-token': localStorage.token\n      }\n    };\n\n    try {\n      const res = await axios.delete(query, config);\n      setRefresh(!refresh);\n      setLoading1(false);\n      setDelOPen(false);\n    } catch (err) {\n      if (err.response) {\n        setLoading1(false);\n        setDelOPen(false);\n       \n        return alert(err.response.data.message);\n      }\n     \n      alert(err);\n    }\n  };\n\n  return (\n    <>\n      <Grid item xs lg={6} maxWidth=\"sm\" mr={5} justify=\"center\">\n        <Card>\n          <Box>\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'flex-end'\n              }}\n            >\n              <Button\n                style={{ marginRight: '70px', marginTop: '40px' }}\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => setAddCatOpen(true)}\n              >\n                Add New\n              </Button>\n            </Box>\n          </Box>\n\n          <Box>\n            <div style={{ overflowY: 'auto', maxHeight: '400px' }}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell> Catagory Name</TableCell>\n\n                    {!loading && <TableCell align=\"center\">Action</TableCell>}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {loading && (\n                    <div className={classes.root}>\n                      <CircularProgress />\n                    </div>\n                  )}\n                  {!loading &&\n                    catagories.map((catagory) => (\n                      <TableRow\n                        hover\n                        key={catagory.id}\n                        onClick={() => {\n                         \n                          handleRow(catagory._id);\n                        }}\n                        selected={\n                          selectedCustomerIds.indexOf(catagory._id) !== -1\n                        }\n                        style={{ backgroundColor: selectedCategory == catagory._id ? \"#bdbdbd\" : 'white' }}\n                        \n                      >\n                        <TableCell\n                          onClick={() => {\n                            hanldeSelectCat(catagory._id, catagory.name);\n                          }}\n                        >\n                          <Box\n                            sx={{\n                              alignItems: 'center',\n                              display: 'flex'\n                            }}\n                          >\n                            <Avatar src={catagory.image} sx={{ mr: 2 }}>\n                              {getInitials(catagory.name)}\n                            </Avatar>\n                            <Typography color=\"textPrimary\" variant=\"body1\">\n                              {catagory.name}\n                            </Typography>\n                          </Box>\n                        </TableCell>\n\n                        <TableCell align=\"center\">\n                          <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            size=\"small\"\n                            startIcon={<DeleteIcon />}\n                            onClick={() =>\n                              handleDelOpen(catagory._id, catagory.name)\n                            }\n                          >\n                            Delete\n                          </Button>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </div>\n          </Box>\n        </Card>\n      </Grid>\n      <div>\n        <Dialog\n          open={delOpen}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"draggable-dialog-title\"\n        >\n          <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n            Delete\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Are You sure Delete {catagoryName} ?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={handleDelClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={() => delCatagory()} color=\"primary\">\n              {!loading1 ? 'Delete' : <CircularProgress />}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n      <div>\n        <Dialog\n          open={addCatOpen}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"draggable-dialog-title\"\n        >\n          <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n            Add New Catagory\n          </DialogTitle>\n          <DialogContent>\n            <AddCatForm\n              refresh={refresh}\n              setAddCatOpen={setAddCatOpen}\n              setRefresh={setRefresh}\n              title={'category'}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button\n              autoFocus\n              onClick={() => setAddCatOpen(false)}\n              color=\"primary\"\n            >\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </>\n  );\n};\n\nexport default Catagory;\n","import { useState, useEffect } from 'react';\nimport './subcatagory.css';\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport EditIcon from '@material-ui/icons/Edit';\nimport moment from 'moment';\nimport { Button } from '@material-ui/core';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport * as apiLinks from '../../services/apiLinks';\nimport Draggable from 'react-draggable';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/styles';\nimport getInitials from 'src/utils/getInitials';\nimport { useGetSetPost } from 'src/services/services';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport AddCatForm from './AddCatForm'\nimport {\n  Avatar,\n  Box,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  Grid\n} from '@material-ui/core';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  paperComponent: {\n    width: 'auto',\n    height: 'auto'\n  },\n  root: {\n    display: 'flex',\n    justifyContent:\"center\",\n    alignItems:\"center\",\n    minWidth:\"500px\",\n    minHeight:\"400px\",\n  \n    '& > * + *': {\n      \n    }\n  }\n}));\n\nfunction PaperComponent(props) {\n  const classes = useStyles();\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nconst Subcatagory = ({ id,setId,catagoryName }) => {\n  const classes = useStyles();\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const { loading, getApi, postApi, apiError } = useGetSetPost();\n  const [subcatagory, setSubcatagory] = useState([]);\n  const [delOpen, setDelOPen] = useState(false);\n  const [addFormOpen, setAddFormOpen] = useState(false);\n  const [editOpen, setEditOpen] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [loading1, setLoading1] = useState(false);\n  const [editRecord, setEditRecord] = useState({});\n  const [addCatOpen, setAddCatOpen] = useState(false);\n  const [subCatId, setSubCatId] = useState(\"\")\n  const [subCatName, setsubCatName] = useState(\"\")\n\n\n\n\n  \n  const handleDelOpen = (id,name) => {\n    setSubCatId(id);\n    setsubCatName(name);\n    setDelOPen(true);\n  };\n\n\n  const handleDelClose = () => {\n    setDelOPen(false);\n  };\n\n  useEffect(() => {\n    const successActions = (data) => {\n      setSubcatagory(data);\n    };\n\n    if (id) {\n      return postApi(\n        '/categories/getCategories',\n        { category_id: id },\n        successActions\n      );\n    }\n  }, [id,refresh]);\n\n  const delCatagory = async () => {\n    setLoading1(true);\n    const query = `http://13.54.226.124:4604/api/categories/delete/${subCatId}`;\n    const config = {\n      headers: {\n        // eslint-disable-next-line no-undef\n        'x-access-token': localStorage.token\n      }\n    };\n\n    try {\n      const res = await axios.delete(query, config);\n      setRefresh(!refresh);\n      setLoading1(false);\n      setDelOPen(false);\n    } catch (err) {\n      if (err.response) {\n        setLoading1(false);\n        setDelOPen(false);\n        // eslint-disable-next-line no-undef\n        return alert(err.response.data.message);\n      }\n      // eslint-disable-next-line no-undef\n      alert(err);\n    }\n  }\n\n  \n  return (\n    <>\n      <Grid item xs lg={6} maxWidth=\"sm\" justify=\"center\">\n        <Card>\n          <Box>\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'space-evenly',\n                textAlign: 'center'\n              }}\n            >\n              <Typography\n                style={{ marginRight: '70px', marginTop: '40px' }}\n                variant=\"h2\"\n                color=\"initial\"\n              >\n                {catagoryName}\n              </Typography>\n              <Button\n                style={{ marginTop: '40px' }}\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => setAddCatOpen(true)}\n              >\n                Add New\n              </Button>\n            </Box>\n          </Box>\n          <PerfectScrollbar>\n            <Box>\n               <div style={{ overflowY: 'scroll', maxHeight: '400px' }}></div>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Sub Catagory</TableCell>\n\n                    {!loading&&<TableCell align=\"center\">Action</TableCell>}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    id===\"\"&&(<h1>No catagory Selected</h1>)\n                    \n                  }\n                  {\n                    (id!==\"\"&&loading) && (<div className={classes.root}>\n                      <CircularProgress />\n                    </div>)\n                  }\n                  {\n                    (id!==\"\"&&!loading) && (\n                      subcatagory.map((catagory) => (\n                           \n                        (\n                         <TableRow\n                         hover\n                         key={catagory.id}\n                         selected={selectedCustomerIds.indexOf(catagory.id) !== -1}\n                       >\n                         <TableCell>\n                           <Box\n                             sx={{\n                               alignItems: 'center',\n                               display: 'flex'\n                             }}\n                           >\n                             <Avatar src={catagory.image} sx={{ mr: 2 }}>\n                               {getInitials(catagory.name)}\n                             </Avatar>\n                             <Typography color=\"textPrimary\" variant=\"body1\">\n                               {catagory.name}\n                             </Typography>\n                           </Box>\n                         </TableCell>\n                       \n                         <TableCell align=\"center\">\n                         \n                           <Button\n                             variant=\"contained\"\n                             color=\"secondary\"\n                             size=\"small\"\n                             startIcon={<DeleteIcon />}\n                             onClick={() => handleDelOpen(catagory._id,catagory.name)}\n                           >\n                             Delete\n                           </Button>\n                         </TableCell>\n                       </TableRow>\n                        )\n                      \n                     ))\n                    )\n                  }\n                </TableBody>\n              </Table>\n            </Box>\n          </PerfectScrollbar>\n        </Card>\n      </Grid>\n      <div>\n        <Dialog\n          open={delOpen}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"draggable-dialog-title\"\n        >\n          <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n            Delete\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Are You sure Delete {subCatName} ?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={handleDelClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={() => delCatagory()} color=\"primary\">\n              {!loading1 ? 'Delete' : <CircularProgress />}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n      <div>\n        <Dialog\n          open={addCatOpen}\n          PaperComponent={PaperComponent}\n          aria-labelledby=\"draggable-dialog-title\"\n        >\n          <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n            Add New Sub Catagory<br/><br/>\n            <h3>{catagoryName}</h3>\n          </DialogTitle>\n          <DialogContent>\n          \n            <AddCatForm\n            \n              refresh={refresh}\n              setAddCatOpen={setAddCatOpen}\n              setRefresh={setRefresh}\n              title={'subCategory'}\n              id={id}\n              \n            />\n          </DialogContent>\n          <DialogActions>\n            <Button\n              autoFocus\n              onClick={() => setAddCatOpen(false)}\n              color=\"primary\"\n            >\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </>\n  );\n};\n\nexport default Subcatagory;\n","import {\n  Container,\n  Grid,\n  makeStyles,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport Catagory from \"./Catagory\";\nimport Subcatagory from \"./Subcatagory\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    textAlign: \"center\",\n  },\n}));\n\nconst Catagories = () => {\n  const classes = useStyles();\n\n  const [id, setId] = useState(\"\");\n  const [catagoryName, setCatagoryName] = useState(\"\");\n\n  return (\n    <>\n      <Grid container maxwidth={false}>\n        <Grid container justify=\"center\" className={classes.header}>\n          <Grid item xs lg={12} maxWidth=\"sm\" justify=\"center\">\n            <Paper elevation=\"3\">\n              <Typography variant=\"h1\" mt={2} py={2} component=\"h2\">\n                Catagories\n              </Typography>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Grid>\n      <div style={{ display: \"flex\" }}>\n        <Catagory\n          setId={setId}\n          catagoryName={catagoryName}\n          id={id}\n          setCatagoryName={setCatagoryName}\n        />\n        <Subcatagory\n          setId={setId}\n          catagoryName={catagoryName}\n          id={id}\n          setCatagoryName={setCatagoryName}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Catagories;\n","import { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport * as Yup from \"yup\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport { Formik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Grid,\n  Link,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { useGetSetPost } from \"src/services/services\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiOutlinedInput-input \": {\n      width: \"80%\",\n      margin: \"20px\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: \"400px\",\n    },\n  },\n  select: {\n    color: \"red\",\n  },\n  dynamicFormContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n  },\n  dynamicFormToolbar: {\n    display: \"flex\",\n  },\n}));\n\n\n\n\nconst EditOrder = ({ refresh, setRefresh , order}) => {\n\n\n  const  initialValues = {\n     \n      status:order.status,\n      \n    }   \n    \n  const navigate = useNavigate();\n  const classes = useStyles();\n  const [catRefresh, setCatRefresh] = useState(false);\n  const { postApi, data, putApi, loading } = useGetSetPost();\n  const [subCatId, setSubCatId] = useState(\"\")\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n  const [productAdded, setProductAdded] = useState(false);\n  \n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues((values) => ({ ...values, [name]: value }));\n\n    switch (name) {\n      case \"name\": {\n        const regex = /^[a-zA-Z ]{2,30}$/;\n        if (!regex.test(value)) {\n          setErrors((errors) => ({\n            ...errors,\n            [name]: \"Please Enter a valid name\",\n          }));\n        } else {\n          setErrors((errors) => ({ ...errors, [name]: \"\" }));\n        }\n        break;\n      }\n      case \"units\": {\n        const regex = /^[a-zA-Z ]{2,30}$/;\n        if (!value >= 1 && value <= 1000) {\n          setErrors((errors) => ({ ...errors, [name]: \"Units are not valid\" }));\n        } else {\n          setErrors((errors) => ({ ...errors, [name]: \"\" }));\n        }\n        break;\n      }\n\n      case \"description\": {\n        const regex = /^[a-zA-Z ]{2,30}$/;\n        if (!value.length) {\n          setErrors((errors) => ({\n            ...errors,\n            [name]: \"Please enter description\",\n          }));\n        } else {\n          setErrors((errors) => ({ ...errors, [name]: \"\" }));\n        }\n        break;\n      }\n    }\n  };\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    const body = {\n      orderID:order.orderID,\n      type:values.status\n      \n    };\n\n    const successActions = (data) => {\n    \n      setRefresh(!refresh);\n     \n    };\n\n    \n    postApi(\"/orders/updateStatus\", body, successActions);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Add Product</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: \"background.default\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: \"100%\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Container maxWidth=\"md\" spacing={2}>\n          {!productAdded && (\n            <form>\n              \n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                <Grid item xs={12}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                    }}\n                  >\n                    <FormControl className={classes.formControl}>\n                      <InputLabel htmlFor=\"grouped-native-select\">\n                        Status\n                      </InputLabel>\n                      <Select\n                        native\n                        defaultValue={values.status.slice(0,1)}\n                        name=\"status\"\n                        onChange={(e) =>\n                          setValues((values) => ({\n                            ...values,\n                            status: e.target.value,\n                          }))\n                        }\n                        id=\"grouped-native-select\"\n                      >\n                        <option aria-label=\"None\" value=\"Select Status\">\n                          Select Status\n                        </option>\n                        \n                        <option value=\"S\">Shipped</option>\n                        <option value=\"D\">Delivered</option>\n                      </Select>\n                    </FormControl>\n                  </div>\n                </Grid>\n              </div>\n             \n              <Box sx={{ py: 2 }}>\n                <Button\n                  color=\"primary\"\n                  fullWidth\n                  size=\"large\"\n                  variant=\"contained\"\n                  onClick={(e) => submitForm(e)}\n                >\n                  Update Order\n                </Button>\n              </Box>\n            </form>\n          )}\n         \n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default EditOrder;","import { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport * as Yup from \"yup\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport { Formik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Grid,\n  Link,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { useGetSetPost } from \"src/services/services\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiOutlinedInput-input \": {\n      width: \"80%\",\n      margin: \"20px\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      Width: \"800px\",\n    },\n  },\n  select: {\n    color: \"red\",\n  },\n  dynamicFormContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n  },\n  dynamicFormToolbar: {\n    display: \"flex\",\n  },\n}));\n\n\nconst ViewOrderDetails = (order) => {\n\n\n  const [orderDetails, setOrderDetails] = useState(order);\n  console.log('orderDetails', orderDetails)\n  const [imageData, setImageData] = useState();\n\n  const openImage = async (data) => {\n    await setImageData(data);\n    console.log(\"image showed\", imageData)\n\n  };\n\n  return (\n    <>\n\n      <Box\n        sx={{\n          backgroundColor: \"background.default\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: \"100%\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Container maxWidth=\"md\" spacing={2}>\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n            <Grid item xs={12}>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                }}\n              >\n\n                <Typography color=\"textPrimary\" variant=\"h3\">\n                  Address Details:-\n                </Typography>\n                <Typography color=\"textPrimary\" variant=\"body1\">\n                  <b>Address: </b>{orderDetails?.order?.address?.address}\n                </Typography>\n                <Typography color=\"textPrimary\" variant=\"body1\">\n                  <b>City: </b>{orderDetails?.order?.address?.city}\n                </Typography>\n                <Typography color=\"textPrimary\" variant=\"body1\">\n                  <b>Country: </b>{orderDetails?.order?.address?.country}\n                </Typography>\n                <Typography color=\"textPrimary\" variant=\"body1\">\n                  <b>Full Name: </b>{orderDetails?.order?.address?.fullName}\n                </Typography>\n                <Typography color=\"textPrimary\" variant=\"body1\">\n                  <b>State: </b>{orderDetails?.order?.address?.state}\n                </Typography>\n                <Typography color=\"textPrimary\" variant=\"body1\">\n                  <b>ZipCode: </b>{orderDetails?.order?.address?.zipCode}\n                </Typography>\n                <Typography color=\"textPrimary\" variant=\"h3\">\n                  Ordered Products:-\n                </Typography>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    pb: 3,\n                  }}\n                >\n                </Box>\n\n                <Box sx={{ p: 2 }}>\n                  <Grid\n                    container\n                    spacing={2}\n                    sx={{\n                      justifyContent: \"space-between\",\n                      display: \"flex\",\n                      flex: 1,\n                      flexDirection: \"row\",\n                      // overflowX: \"scroll\",\n                      width: \"100%\",\n                      // height: \"130px\",\n                    }}\n                  >\n                    {\n                      orderDetails.order.cart.map((value, index) => {\n                        return (\n                          <>\n                            <div style={{\n                              width: \"100%\", borderTop: \"1px solid #00000040\", display: \"flex\",\n                              columnGap: \"15px\"\n                            }}>\n                              <div>\n                                <img\n                                  src={value.cartId.product?.productFiles[0].url}\n                                  width=\"120px\"\n                                  // border=\"1px solid grey\"\n                                  onClick={() => {\n                                    openImage(value.cartId);\n                                  }}\n                                  style={{ objectFit: 'contain' }}\n                                  height=\"80px\"\n                                  alt=\"image\"\n                                />\n                              </div>\n                              <div>\n                                <Typography color=\"textPrimary\" variant=\"body1\">\n                                  <b>Product Name: </b> {value.cartId.product.name}\n                                </Typography>\n                                <Typography color=\"textPrimary\" variant=\"body1\">\n                                  <b>Product Price: </b>  {value.cartId.product.price}\n                                </Typography>\n                                <Typography color=\"textPrimary\" variant=\"body1\">\n                                  <b>Quantity: </b>  {value.cartId.product.units}\n                                </Typography><Typography color=\"textPrimary\" variant=\"body1\">\n                                  <b>Size: </b>\n                                  {/* {value.cartId.product.size} */}\n                                  {value?.cartId?.product?.variation?.items[index]?.value}\n                                </Typography>\n                              </div>\n                            </div>\n                            <br />\n                          </>\n                        )\n                      })\n                    }\n                  </Grid>\n                </Box>\n\n                {/* <div >\n                  <Typography color=\"textPrimary\" variant=\"body1\">\n                    <b>Product Name: </b> {imageData?.product.name}\n                  </Typography>\n                  <Typography color=\"textPrimary\" variant=\"body1\">\n                    <b>Product Price: </b>  {imageData?.product.price}\n                  </Typography>\n                  <Typography color=\"textPrimary\" variant=\"body1\">\n                    <b>Quantity: </b>  {imageData?.quantity}\n                  </Typography>\n                </div> */}\n\n              </div>\n            </Grid>\n          </div>\n        </Container>\n      </Box >\n    </>\n  );\n};\n\nexport default ViewOrderDetails;","import moment from \"moment\";\nimport { v4 as uuid } from \"uuid\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Chip,\n  CircularProgress,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n} from \"@material-ui/core\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport { useGetSetPost } from \"src/services/services\";\nimport { useEffect } from \"react\";\nimport React, { useState } from \"react\";\nimport DraggableDialog from \"src/components/DraggableDialog\";\nimport EditOrder from \"src/components/orders/EditOrder\";\nimport { Helmet } from \"react-helmet\";\nimport ViewOrderDetails from \"src/components/orders/ViewOrderDetails\";\n\n\nconst Orders = (props) => {\n  \n  const [openUpdateOrder, setOpenUpdateOrder] = useState(false);\n\n  const [orderDetails, setOrderDetails] = useState({});\n\n  const [viewDetails, setViewDetails] = useState({});\n  const [OpenDetails, setOpenDetails] = useState(false);\n\n\n  const { data:orders, apiError, getApi, loading } = useGetSetPost();\n\n  const [refresh, setRefresh] = useState(false)\n\n  useEffect(() => {\n    getApi(\"orders/getAllOrders\");\n\n    console.log(\"hello\");\n  }, [refresh]);\n\n\n  const clickToEdit = (orderData) => {\n    setOpenUpdateOrder(true);\n    setOrderDetails(orderData);\n  };\n\n  const clickToView = (orderDetails) => {\n    setOpenDetails(true);\n    setViewDetails(orderDetails);\n  };\n  \n\n  return (\n    <>\n    <Helmet>\n        <title>Orders | TradeMax</title>\n      </Helmet>\n      <Card {...props}>\n        <CardHeader title=\" Orders\" />\n        <Divider />\n        <PerfectScrollbar>\n          <Box sx={{ minWidth: 800 }}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Order ID</TableCell>\n                  <TableCell>Customer</TableCell>\n                  <TableCell sortDirection=\"desc\">Date</TableCell>\n                  <TableCell>Status</TableCell>\n                  <TableCell>Payment Status</TableCell>\n                  <TableCell align=\"center\">Action</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {loading && (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      marginLeft: \"500px\",\n                      maxWidth: \"600px\",\n                      alignItems: \"center\",\n                      minHeight: \"300px\",\n                    }}\n                  >\n                    <CircularProgress />\n                  </div>\n                )}\n                {orders &&\n                  orders.map((order) => (\n                    <TableRow hover key={order._id}>\n                      <TableCell>{order.orderID}</TableCell>\n                      <TableCell>{order.address.fullName}</TableCell>\n\n                      <TableCell>\n                        {order?.createdOn.slice(0, order.createdOn.indexOf(\"T\"))}\n                        \n                      </TableCell>\n                      <TableCell>\n                        <Chip\n                          color=\"primary\"\n                          label={order.status}\n                          size=\"small\"\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <Chip\n                          color=\"primary\"\n                          label={order.paymentStatus}\n                          size=\"small\"\n                        />\n                      </TableCell>\n                      <TableCell  align=\"center\">\n                        <Button\n                          variant=\"contained\"\n                          size=\"small\"\n                          color=\"primary\"\n                          style={{ marginRight: '10px' }}\n                          onClick={(e) => clickToEdit(order)}\n                        >\n                          Edit\n                        </Button>\n                        <Button\n                          variant=\"contained\"\n                          size=\"small\"\n                          color=\"primary\"\n                          onClick={(e) => clickToView(order)}\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </Box>\n        </PerfectScrollbar>\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            p: 2\n          }}\n        >\n          <Button\n            color=\"primary\"\n            endIcon={<ArrowRightIcon />}\n            size=\"small\"\n            variant=\"text\"\n          >\n            View all\n          </Button>\n        </Box>\n      </Card>\n      <DraggableDialog\n        title=\"Update status\"\n        open={openUpdateOrder}\n        setOpen={setOpenUpdateOrder}\n        order={orderDetails}\n        component={EditOrder}\n        refresh={refresh}\n        setRefresh={setRefresh}\n      />\n      <DraggableDialog\n        title=\"Order Details\"\n        open={OpenDetails}\n        setOpen={setOpenDetails}\n        order={viewDetails}\n        component={ViewOrderDetails}\n        refresh={refresh}\n        setRefresh={setRefresh}\n      />\n    </>\n  );\n};\n\nexport default Orders;\n","import { Navigate } from 'react-router-dom';\nimport DashboardLayout from 'src/components/DashboardLayout';\nimport MainLayout from 'src/components/MainLayout';\nimport Account from 'src/pages/Account';\nimport CustomerList from 'src/pages/CustomerList';\nimport Dashboard from 'src/pages/Dashboard';\nimport Login from 'src/pages/Login';\nimport NotFound from 'src/pages/NotFound';\nimport ProductList from 'src/pages/ProductList';\nimport Register from 'src/pages/Register';\nimport Catagories from './pages/catagories/Catagories';\nimport Orders from './pages/Orders';\n\n\n\nconst routes = [\n  {\n    path: 'app',\n    element: <DashboardLayout />,\n    children: [\n      { path: 'account', element: <Account /> },\n      { path: 'customers', element: <CustomerList /> },\n      { path: 'dashboard', element: <Dashboard /> },\n      { path: 'products', element: <ProductList/> },\n      { path: 'catagories', element: <Catagories/> },\n      { path: 'orders', element: <Orders/> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  },\n  {\n    path: '/',\n    element: <MainLayout />,\n    children: [\n      { path: 'login', element: <Login /> },\n      { path: 'register', element: <Register /> },\n      { path: '404', element: <NotFound /> },\n      { path: '/', element: <Navigate to=\"/login\" /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  }\n];\n\nexport default routes;\n","import 'react-perfect-scrollbar/dist/css/styles.css';\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/components/GlobalStyles';\nimport 'src/mixins/chartjs';\nimport theme from 'src/theme';\nimport routes from 'src/routes';\nimport Login from './pages/Login';\nimport { Navigate,useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nconst App = () => {\n  const routing = useRoutes(routes);\n  const isLogin = localStorage.token;\n  const navigate = useNavigate()\n\n  useEffect(() => {\n\n    !isLogin&& navigate(\"/login\")\n    \n  }, [])\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n\n     {routing }\n     \n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}